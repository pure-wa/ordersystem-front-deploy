{"ast":null,"code":"import { createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, createCommentVNode as _createCommentVNode, openBlock as _openBlock, createBlock as _createBlock } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_v_card_title = _resolveComponent(\"v-card-title\");\n  const _component_v_text_field = _resolveComponent(\"v-text-field\");\n  const _component_v_file_input = _resolveComponent(\"v-file-input\");\n  const _component_v_btn = _resolveComponent(\"v-btn\");\n  const _component_v_col = _resolveComponent(\"v-col\");\n  const _component_v_row = _resolveComponent(\"v-row\");\n  const _component_v_form = _resolveComponent(\"v-form\");\n  const _component_v_card_text = _resolveComponent(\"v-card-text\");\n  const _component_v_card = _resolveComponent(\"v-card\");\n  const _component_v_container = _resolveComponent(\"v-container\");\n  return _openBlock(), _createBlock(_component_v_container, null, {\n    default: _withCtx(() => [_createVNode(_component_v_row, {\n      justify: \"center\"\n    }, {\n      default: _withCtx(() => [_createVNode(_component_v_col, {\n        cols: \"6\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_v_card, null, {\n          default: _withCtx(() => [_createVNode(_component_v_card_title, {\n            class: \"text-h5 text-center\"\n          }, {\n            default: _withCtx(() => _cache[6] || (_cache[6] = [_createTextVNode(\" 상품등록 \", -1 /* CACHED */)])),\n            _: 1 /* STABLE */,\n            __: [6]\n          }), _createVNode(_component_v_card_text, null, {\n            default: _withCtx(() => [_createVNode(_component_v_form, null, {\n              default: _withCtx(() => [_createVNode(_component_v_text_field, {\n                label: \"상품명\",\n                modelValue: $data.name,\n                \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.name = $event)\n              }, null, 8 /* PROPS */, [\"modelValue\"]), _createVNode(_component_v_text_field, {\n                label: \"카테고리\",\n                modelValue: $data.category,\n                \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $data.category = $event)\n              }, null, 8 /* PROPS */, [\"modelValue\"]), _createVNode(_component_v_text_field, {\n                label: \"가격\",\n                modelValue: $data.price,\n                \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => $data.price = $event),\n                modelModifiers: {\n                  number: true\n                }\n              }, null, 8 /* PROPS */, [\"modelValue\"]), _createVNode(_component_v_text_field, {\n                label: \"재고수량\",\n                modelValue: $data.stockQuantity,\n                \"onUpdate:modelValue\": _cache[3] || (_cache[3] = $event => $data.stockQuantity = $event),\n                modelModifiers: {\n                  number: true\n                }\n              }, null, 8 /* PROPS */, [\"modelValue\"]), _createVNode(_component_v_file_input, {\n                label: \"상품이미지\",\n                modelValue: $data.productImage,\n                \"onUpdate:modelValue\": _cache[4] || (_cache[4] = $event => $data.productImage = $event),\n                accept: \"image/**\",\n                onChange: $options.fileUpload,\n                multiple: \"\"\n              }, null, 8 /* PROPS */, [\"modelValue\", \"onChange\"]), _createVNode(_component_v_row, null, {\n                default: _withCtx(() => [_createVNode(_component_v_col, null, {\n                  default: _withCtx(() => [_createCommentVNode(\" block : 속한 row에서 너비를 꽉채우는 옵션이다 \"), _createVNode(_component_v_btn, {\n                    onClick: _cache[5] || (_cache[5] = $event => $options.productCreate()),\n                    color: \"primary\",\n                    block: \"\"\n                  }, {\n                    default: _withCtx(() => _cache[7] || (_cache[7] = [_createTextVNode(\" 등록 \", -1 /* CACHED */)])),\n                    _: 1 /* STABLE */,\n                    __: [7]\n                  })]),\n                  _: 1 /* STABLE */\n                })]),\n                _: 1 /* STABLE */\n              })]),\n              _: 1 /* STABLE */\n            })]),\n            _: 1 /* STABLE */\n          })]),\n          _: 1 /* STABLE */\n        })]),\n        _: 1 /* STABLE */\n      })]),\n      _: 1 /* STABLE */\n    })]),\n    _: 1 /* STABLE */\n  });\n}","map":{"version":3,"names":["_createBlock","_component_v_container","_createVNode","_component_v_row","justify","_component_v_col","cols","_component_v_card","_component_v_card_title","class","_cache","_component_v_card_text","_component_v_form","_component_v_text_field","label","$data","name","$event","category","price","number","stockQuantity","_component_v_file_input","productImage","accept","onChange","$options","fileUpload","multiple","_createCommentVNode","_component_v_btn","onClick","productCreate","color","block"],"sources":["/Users/purewa/Desktop/Pratice/dev front/src/views/ProductCreate.vue"],"sourcesContent":["<template>\n    <v-container>\n        <v-row justify=\"center\">\n            <v-col cols=\"6\">\n                <v-card>\n                    <v-card-title class=\"text-h5 text-center\">\n                        상품등록\n                    </v-card-title>\n                    <v-card-text>\n                        <v-form>\n                            <v-text-field\n                                label=\"상품명\"\n                                v-model=\"name\"\n                            />\n                            <v-text-field\n                                label=\"카테고리\"\n                                v-model=\"category\"\n                            />\n                            <v-text-field\n                                label=\"가격\"\n                                v-model.number=\"price\"\n                            />\n                            <v-text-field\n                                label=\"재고수량\"\n                                v-model.number=\"stockQuantity\"\n                            />\n                            <v-file-input\n                                label=\"상품이미지\"\n                                v-model=\"productImage\"\n                                accept=\"image/**\"\n                                @change=\"fileUpload\"\n                                multiple\n                            />\n                            <v-row>\n                                <v-col>\n                                    <!-- block : 속한 row에서 너비를 꽉채우는 옵션이다 -->\n                                    <v-btn @click=\"productCreate()\" color=\"primary\" block=\"\">\n                                        등록\n                                    </v-btn>\n                                </v-col>\n                            </v-row>\n                        </v-form>\n                    </v-card-text>\n                </v-card>\n            </v-col>\n        </v-row>\n    </v-container>\n</template>\n<script>\nimport { getErrorMessage } from '@/utils/commonDataHandler';\nimport axios from 'axios';\n\n    export default {\n        data() {\n            return {\n                name:\"\",\n                category:\"\",\n                price:null,\n                stockQuantity:null,\n                productImage:null,\n            }\n        },\n        methods: {\n            fileUpload(event) {\n                // 여러 개의 상품일 경우 for문을 실행하여 productImage에 값 할당\n                this.productImage = event.target.files[0];\n\n            },\n            async productCreate() {\n                try {\n                    // multi-part form data 또는 url인코딩 방식인 경우에 FormData 클래스 사용해서 객체 조립\n                let data = new FormData();\n                data.append(\"name\", this.name);\n                data.append(\"category\", this.category);\n                data.append(\"price\", this.price);\n                data.append(\"stockQuantity\", this.stockQuantity);\n                data.append(\"productImage\", this.productImage);\n                await axios.post(`${process.env.VUE_APP_API_BASE_URL}/product/create`, data);\n                this.$router.push(\"/product/manage\");\n                } catch(e) {\n                    console.log(getErrorMessage(e));\n                }\n            },\n        }\n    }\n</script>"],"mappings":";;;;;;;;;;;;uBACIA,YAAA,CA6CcC,sBAAA;sBA5CV,MA2CQ,CA3CRC,YAAA,CA2CQC,gBAAA;MA3CDC,OAAO,EAAC;IAAQ;wBACnB,MAyCQ,CAzCRF,YAAA,CAyCQG,gBAAA;QAzCDC,IAAI,EAAC;MAAG;0BACX,MAuCS,CAvCTJ,YAAA,CAuCSK,iBAAA;4BAtCL,MAEe,CAFfL,YAAA,CAEeM,uBAAA;YAFDC,KAAK,EAAC;UAAqB;8BAAC,MAE1CC,MAAA,QAAAA,MAAA,O,iBAF0C,QAE1C,mB;;;cACAR,YAAA,CAkCcS,sBAAA;8BAjCV,MAgCS,CAhCTT,YAAA,CAgCSU,iBAAA;gCA/BL,MAGE,CAHFV,YAAA,CAGEW,uBAAA;gBAFEC,KAAK,EAAC,KAAK;4BACFC,KAAA,CAAAC,IAAI;2EAAJD,KAAA,CAAAC,IAAI,GAAAC,MAAA;uDAEjBf,YAAA,CAGEW,uBAAA;gBAFEC,KAAK,EAAC,MAAM;4BACHC,KAAA,CAAAG,QAAQ;2EAARH,KAAA,CAAAG,QAAQ,GAAAD,MAAA;uDAErBf,YAAA,CAGEW,uBAAA;gBAFEC,KAAK,EAAC,IAAI;4BACMC,KAAA,CAAAI,KAAK;2EAALJ,KAAA,CAAAI,KAAK,GAAAF,MAAA;gCAArB;kBAAAG,MAAA;gBAAA;uDAEJlB,YAAA,CAGEW,uBAAA;gBAFEC,KAAK,EAAC,MAAM;4BACIC,KAAA,CAAAM,aAAa;2EAAbN,KAAA,CAAAM,aAAa,GAAAJ,MAAA;gCAA7B;kBAAAG,MAAA;gBAAA;uDAEJlB,YAAA,CAMEoB,uBAAA;gBALER,KAAK,EAAC,OAAO;4BACJC,KAAA,CAAAQ,YAAY;2EAAZR,KAAA,CAAAQ,YAAY,GAAAN,MAAA;gBACrBO,MAAM,EAAC,UAAU;gBAChBC,QAAM,EAAEC,QAAA,CAAAC,UAAU;gBACnBC,QAAQ,EAAR;mEAEJ1B,YAAA,CAOQC,gBAAA;kCANJ,MAKQ,CALRD,YAAA,CAKQG,gBAAA;oCAJJ,MAAuC,CAAvCwB,mBAAA,oCAAuC,EACvC3B,YAAA,CAEQ4B,gBAAA;oBAFAC,OAAK,EAAArB,MAAA,QAAAA,MAAA,MAAAO,MAAA,IAAES,QAAA,CAAAM,aAAa;oBAAIC,KAAK,EAAC,SAAS;oBAACC,KAAK,EAAC;;sCAAG,MAEzDxB,MAAA,QAAAA,MAAA,O,iBAFyD,MAEzD,mB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}