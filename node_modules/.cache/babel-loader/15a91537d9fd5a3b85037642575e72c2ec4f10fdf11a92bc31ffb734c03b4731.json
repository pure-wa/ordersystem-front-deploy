{"ast":null,"code":"function initState() {\n  return {\n    count: 0\n  };\n}\n\n// 상태 유효 범위와 리셋 시점\n// 리셋시점: 페이지 새로고침, 브라우저 종료시\n// 유효시점 : SPA라우팅 시\nexport const practice = {\n  // 상태 초기화\n  state: initState,\n  // 상태값을 변경하는 메서드\n  mutations: {\n    incrementCount(state) {\n      state.count++;\n    }\n  },\n  // 컴포넌트에서 mutation을 직접 호출하기 보다는, actions를 통해 nutation을 호출\n  actions: {\n    incrementCount(context) {\n      // vuex에서 actions에서 mutations함수를 호출할 때는 commit함수를 사용\n      // 이와 같은 구조는 여러 mutation의 조합을 actions에서 호출할 수 있기 때문\n      context.commit(\"incrementCount\");\n    }\n  },\n  // 상태값을 가져가기 위한 메서드\n  getters: {\n    getCount: state => state.count\n  }\n};","map":{"version":3,"names":["initState","count","practice","state","mutations","incrementCount","actions","context","commit","getters","getCount"],"sources":["/Users/purewa/Desktop/Pratice/Front_Pratice/vue-project/src/store/practice.js"],"sourcesContent":["function initState() {\n    return {\n        count: 0\n    }\n}\n\n\n// 상태 유효 범위와 리셋 시점\n// 리셋시점: 페이지 새로고침, 브라우저 종료시\n// 유효시점 : SPA라우팅 시\nexport const practice = {\n    // 상태 초기화\n    state: initState,\n\n    // 상태값을 변경하는 메서드\n    mutations: {\n        incrementCount(state) {\n            state.count++;\n        }\n    },\n    // 컴포넌트에서 mutation을 직접 호출하기 보다는, actions를 통해 nutation을 호출\n    actions: {        \n        incrementCount(context) {\n            // vuex에서 actions에서 mutations함수를 호출할 때는 commit함수를 사용\n            // 이와 같은 구조는 여러 mutation의 조합을 actions에서 호출할 수 있기 때문\n            context.commit(\"incrementCount\");\n        }\n    },\n\n    // 상태값을 가져가기 위한 메서드\n    getters: {\n        getCount: state => state.count,\n\n    }\n\n\n}"],"mappings":"AAAA,SAASA,SAASA,CAAA,EAAG;EACjB,OAAO;IACHC,KAAK,EAAE;EACX,CAAC;AACL;;AAGA;AACA;AACA;AACA,OAAO,MAAMC,QAAQ,GAAG;EACpB;EACAC,KAAK,EAAEH,SAAS;EAEhB;EACAI,SAAS,EAAE;IACPC,cAAcA,CAACF,KAAK,EAAE;MAClBA,KAAK,CAACF,KAAK,EAAE;IACjB;EACJ,CAAC;EACD;EACAK,OAAO,EAAE;IACLD,cAAcA,CAACE,OAAO,EAAE;MACpB;MACA;MACAA,OAAO,CAACC,MAAM,CAAC,gBAAgB,CAAC;IACpC;EACJ,CAAC;EAED;EACAC,OAAO,EAAE;IACLC,QAAQ,EAAEP,KAAK,IAAIA,KAAK,CAACF;EAE7B;AAGJ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}