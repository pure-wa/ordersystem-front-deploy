{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, toDisplayString as _toDisplayString, openBlock as _openBlock, createElementBlock as _createElementBlock, createBlock as _createBlock } from \"vue\";\nconst _hoisted_1 = {\n  key: 0\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_v_btn = _resolveComponent(\"v-btn\");\n  const _component_v_col = _resolveComponent(\"v-col\");\n  const _component_v_row = _resolveComponent(\"v-row\");\n  const _component_v_container = _resolveComponent(\"v-container\");\n  const _component_v_app_bar = _resolveComponent(\"v-app-bar\");\n  return _openBlock(), _createBlock(_component_v_app_bar, null, {\n    default: _withCtx(() => [_createVNode(_component_v_container, null, {\n      default: _withCtx(() => [_createVNode(_component_v_row, null, {\n        default: _withCtx(() => [_createCommentVNode(\" d-flex justify-start : 왼쪽 기준 정렬 \"), _createVNode(_component_v_col, {\n          class: \"d-flex justify-start\"\n        }, {\n          default: _withCtx(() => [$data.userRole === 'ADMIN' ? (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createVNode(_component_v_btn, {\n            to: '/member/list'\n          }, {\n            default: _withCtx(() => _cache[1] || (_cache[1] = [_createTextVNode(\"회원관리\", -1 /* CACHED */)])),\n            _: 1 /* STABLE */,\n            __: [1]\n          }), _createVNode(_component_v_btn, {\n            to: '/product/manage'\n          }, {\n            default: _withCtx(() => _cache[2] || (_cache[2] = [_createTextVNode(\"상품관리\", -1 /* CACHED */)])),\n            _: 1 /* STABLE */,\n            __: [2]\n          }), _createVNode(_component_v_btn, {\n            href: \"/order/list\"\n          }, {\n            default: _withCtx(() => [_createTextVNode(\"실시간 주문건수 \" + _toDisplayString($data.liveOrderCount), 1 /* TEXT */)]),\n            _: 1 /* STABLE */\n          }), _createCommentVNode(\" <v-btn :to=\\\"'/practice/store'\\\">store test</v-btn> \")])) : _createCommentVNode(\"v-if\", true)]),\n          _: 1 /* STABLE */\n        }), _createVNode(_component_v_col, {\n          class: \"text-center\"\n        }, {\n          default: _withCtx(() => [_createVNode(_component_v_btn, {\n            to: \"'/'\"\n          }, {\n            default: _withCtx(() => _cache[3] || (_cache[3] = [_createTextVNode(\"DEV SHOP\", -1 /* CACHED */)])),\n            _: 1 /* STABLE */,\n            __: [3]\n          })]),\n          _: 1 /* STABLE */\n        }), _createVNode(_component_v_col, {\n          class: \"d-flex justify-end\"\n        }, {\n          default: _withCtx(() => [$data.isLogined ? (_openBlock(), _createBlock(_component_v_btn, {\n            key: 0,\n            to: '/member/login'\n          }, {\n            default: _withCtx(() => [_createTextVNode(\"장바구니 \" + _toDisplayString($options.totalQuantity), 1 /* TEXT */)]),\n            _: 1 /* STABLE */\n          })) : _createCommentVNode(\"v-if\", true), _createVNode(_component_v_btn, {\n            to: '/product/list'\n          }, {\n            default: _withCtx(() => _cache[4] || (_cache[4] = [_createTextVNode(\"상품목록\", -1 /* CACHED */)])),\n            _: 1 /* STABLE */,\n            __: [4]\n          }), $data.isLogined ? (_openBlock(), _createBlock(_component_v_btn, {\n            key: 1,\n            to: '/member/mypage'\n          }, {\n            default: _withCtx(() => _cache[5] || (_cache[5] = [_createTextVNode(\"마이페이지\", -1 /* CACHED */)])),\n            _: 1 /* STABLE */,\n            __: [5]\n          })) : _createCommentVNode(\"v-if\", true), !$data.isLogined ? (_openBlock(), _createBlock(_component_v_btn, {\n            key: 2,\n            to: '/member/create'\n          }, {\n            default: _withCtx(() => _cache[6] || (_cache[6] = [_createTextVNode(\"회원가입\", -1 /* CACHED */)])),\n            _: 1 /* STABLE */,\n            __: [6]\n          })) : _createCommentVNode(\"v-if\", true), !$data.isLogined ? (_openBlock(), _createBlock(_component_v_btn, {\n            key: 3,\n            to: '/member/login'\n          }, {\n            default: _withCtx(() => _cache[7] || (_cache[7] = [_createTextVNode(\"로그인\", -1 /* CACHED */)])),\n            _: 1 /* STABLE */,\n            __: [7]\n          })) : _createCommentVNode(\"v-if\", true), $data.isLogined ? (_openBlock(), _createBlock(_component_v_btn, {\n            key: 4,\n            onClick: _cache[0] || (_cache[0] = $event => $options.doLogout())\n          }, {\n            default: _withCtx(() => _cache[8] || (_cache[8] = [_createTextVNode(\"로그아웃\", -1 /* CACHED */)])),\n            _: 1 /* STABLE */,\n            __: [8]\n          })) : _createCommentVNode(\"v-if\", true)]),\n          _: 1 /* STABLE */\n        })]),\n        _: 1 /* STABLE */\n      })]),\n      _: 1 /* STABLE */\n    })]),\n    _: 1 /* STABLE */\n  });\n}","map":{"version":3,"names":["_createBlock","_component_v_app_bar","_createVNode","_component_v_container","_component_v_row","_createCommentVNode","_component_v_col","class","$data","userRole","_createElementBlock","_hoisted_1","_component_v_btn","to","_cache","href","_toDisplayString","liveOrderCount","isLogined","$options","totalQuantity","onClick","$event","doLogout"],"sources":["/Users/purewa/Desktop/Pratice/dev front/src/components/HeaderComponent.vue"],"sourcesContent":["<template>\n    <v-app-bar>\n        <v-container>\n            <v-row>\n                <!-- d-flex justify-start : 왼쪽 기준 정렬 -->\n                <v-col class=\"d-flex justify-start\">\n                    <div v-if=\"userRole==='ADMIN'\">\n                        <v-btn :to=\"'/member/list'\">회원관리</v-btn>\n                        <v-btn :to=\"'/product/manage'\">상품관리</v-btn>\n                        <v-btn href=\"/order/list\">실시간 주문건수 {{ liveOrderCount }}</v-btn>\n                        <!-- <v-btn :to=\"'/practice/store'\">store test</v-btn> -->\n                    </div>\n                </v-col>\n                <v-col class=\"text-center\">\n                    <v-btn to=\"'/'\">DEV SHOP</v-btn>\n                </v-col>\n                <v-col class=\"d-flex justify-end\">\n                    <v-btn v-if=\"isLogined\" :to=\"'/member/login'\">장바구니 {{ totalQuantity }} </v-btn>\n                    <v-btn :to=\"'/product/list'\">상품목록</v-btn>\n                    <v-btn v-if=\"isLogined\" :to=\"'/member/mypage'\">마이페이지</v-btn>\n                    <v-btn v-if=\"!isLogined\" :to=\"'/member/create'\">회원가입</v-btn>\n                    <v-btn v-if=\"!isLogined\" :to=\"'/member/login'\">로그인</v-btn>\n                    <v-btn v-if=\"isLogined\" @click=\"doLogout()\">로그아웃</v-btn>\n                </v-col>\n            </v-row>\n        </v-container>\n    </v-app-bar>\n</template>\n\n<script>\nimport { EventSourcePolyfill } from 'event-source-polyfill';\nimport { jwtDecode } from 'jwt-decode';\n\n    export default {\n        data() {\n            return {\n                userRole: null,\n                isLogined: false,\n                liveOrderCount: 0,\n            }\n        },\n        computed: {\n            totalQuantity() {\n                return this.$store.getters.getTotalQuantity;\n            }\n        },\n        created() {\n            const accessToken = localStorage.getItem(\"accessToken\");\n            if(accessToken) {\n                const payload = jwtDecode(accessToken);\n                this.userRole = payload.role;            \n                this.isLogined = true;\n            }\n            // sse 연결 및 메시지 수신\n            if(this.userRole === 'ADMIN') {\n                // sse 연결 요청을 위한 event-source-polyfill라이브러리 사용\n                // npm install event-source-polyfill\n                let sse = new EventSourcePolyfill(`${process.env.VUE_APP_API_BASE_URL}/sse/connect`, {\n                    headers: {\n                        Authorization: `Bearer ${accessToken}`\n                    }\n                });\n                sse.addEventListener('connect', (event) => {\n                    console.log(event);\n                });\n                sse.addEventListener('ordered', () => {\n                    this.liveOrderCount++;\n                    console.log(this.liveOrderCount);\n                });\n            }\n        },\n        methods: {\n            doLogout() {\n                window.localStorage.clear(); // key로 삭제하기\n                // this.isLogined = false;\n                // this.$router.push(\"/\")\n                window.location.reload();\n                this.userRole = null;\n            }\n        }\n    }\n</script>"],"mappings":";;;;;;;;;;uBACIA,YAAA,CAyBYC,oBAAA;sBAxBR,MAuBc,CAvBdC,YAAA,CAuBcC,sBAAA;wBAtBV,MAqBQ,CArBRD,YAAA,CAqBQE,gBAAA;0BApBJ,MAAwC,CAAxCC,mBAAA,qCAAwC,EACxCH,YAAA,CAOQI,gBAAA;UAPDC,KAAK,EAAC;QAAsB;4BAC/B,MAKM,CALKC,KAAA,CAAAC,QAAQ,gB,cAAnBC,mBAAA,CAKM,OAAAC,UAAA,GAJFT,YAAA,CAAwCU,gBAAA;YAAhCC,EAAE,EAAE;UAAc;8BAAE,MAAIC,MAAA,QAAAA,MAAA,O,iBAAJ,MAAI,mB;;;cAChCZ,YAAA,CAA2CU,gBAAA;YAAnCC,EAAE,EAAE;UAAiB;8BAAE,MAAIC,MAAA,QAAAA,MAAA,O,iBAAJ,MAAI,mB;;;cACnCZ,YAAA,CAA+DU,gBAAA;YAAxDG,IAAI,EAAC;UAAa;8BAAC,MAAS,C,iBAAT,WAAS,GAAAC,gBAAA,CAAGR,KAAA,CAAAS,cAAc,iB;;cACpDZ,mBAAA,yDAA0D,C;;YAGlEH,YAAA,CAEQI,gBAAA;UAFDC,KAAK,EAAC;QAAa;4BACtB,MAAgC,CAAhCL,YAAA,CAAgCU,gBAAA;YAAzBC,EAAE,EAAC;UAAK;8BAAC,MAAQC,MAAA,QAAAA,MAAA,O,iBAAR,UAAQ,mB;;;;;YAE5BZ,YAAA,CAOQI,gBAAA;UAPDC,KAAK,EAAC;QAAoB;4BAC7B,MAA+E,CAAlEC,KAAA,CAAAU,SAAS,I,cAAtBlB,YAAA,CAA+EY,gBAAA;;YAAtDC,EAAE,EAAE;;8BAAiB,MAAK,C,iBAAL,OAAK,GAAAG,gBAAA,CAAGG,QAAA,CAAAC,aAAa,iB;;mDACnElB,YAAA,CAAyCU,gBAAA;YAAjCC,EAAE,EAAE;UAAe;8BAAE,MAAIC,MAAA,QAAAA,MAAA,O,iBAAJ,MAAI,mB;;;cACpBN,KAAA,CAAAU,SAAS,I,cAAtBlB,YAAA,CAA4DY,gBAAA;;YAAnCC,EAAE,EAAE;;8BAAkB,MAAKC,MAAA,QAAAA,MAAA,O,iBAAL,OAAK,mB;;;oDACtCN,KAAA,CAAAU,SAAS,I,cAAvBlB,YAAA,CAA4DY,gBAAA;;YAAlCC,EAAE,EAAE;;8BAAkB,MAAIC,MAAA,QAAAA,MAAA,O,iBAAJ,MAAI,mB;;;oDACtCN,KAAA,CAAAU,SAAS,I,cAAvBlB,YAAA,CAA0DY,gBAAA;;YAAhCC,EAAE,EAAE;;8BAAiB,MAAGC,MAAA,QAAAA,MAAA,O,iBAAH,KAAG,mB;;;mDACrCN,KAAA,CAAAU,SAAS,I,cAAtBlB,YAAA,CAAwDY,gBAAA;;YAA/BS,OAAK,EAAAP,MAAA,QAAAA,MAAA,MAAAQ,MAAA,IAAEH,QAAA,CAAAI,QAAQ;;8BAAI,MAAIT,MAAA,QAAAA,MAAA,O,iBAAJ,MAAI,mB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}