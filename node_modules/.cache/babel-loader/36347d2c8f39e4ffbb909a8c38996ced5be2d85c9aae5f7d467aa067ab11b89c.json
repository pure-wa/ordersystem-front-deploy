{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport axios from 'axios';\nimport { getResultData, getErrorMessage } from '@/utils/commonDataHandler';\nexport default {\n  data() {\n    return {\n      member: {\n        id: '',\n        name: '',\n        email: '',\n        role: ''\n      }\n    };\n  },\n  async created() {\n    // 🔥 안전한 파라미터 체크 추가\n    const memberId = this.$route.params.id;\n    console.log('🔍 디버깅:', {\n      route: this.$route,\n      params: this.$route.params,\n      memberId: thismemberId,\n      memberIdType: typeof memberId\n    });\n    if (!memberId || memberId === 'undefined') {\n      console.error('❌ 올바르지 않은 회원 ID:', memberId);\n      alert('올바르지 않은 회원 ID입니다.');\n      this.$router.push('/member/list');\n      return;\n    }\n    await this.getMemberDetail();\n  },\n  methods: {\n    async getMemberDetail() {\n      try {\n        const accessToken = localStorage.getItem('accessToken');\n        const memberId = this.$route.params.id;\n\n        // 🔥 다시 한번 체크\n        if (!memberId || memberId === 'undefined') {\n          throw new Error('회원 ID가 유효하지 않습니다.');\n        }\n        console.log('📤 API 요청 URL:', `${process.env.VUE_APP_API_BASE_URL}/member/detail/${memberId}`);\n        const response = await axios.get(`${process.env.VUE_APP_API_BASE_URL}/member/detail/${memberId}`, {\n          headers: {\n            Authorization: `Bearer ${accessToken}`\n          }\n        });\n        this.member = getResultData(response);\n        console.log('✅ 회원 정보 로드 성공:', this.member);\n      } catch (error) {\n        console.error('❌ getMemberDetail 오류:', error);\n        if (error.response?.status === 401) {\n          alert('관리자 권한이 필요합니다.');\n          this.$router.push('/member/login');\n        } else if (error.response?.status === 403) {\n          alert('접근 권한이 없습니다.');\n          this.$router.push('/member/list');\n        } else {\n          alert(getErrorMessage(error));\n          this.$router.push('/member/list');\n        }\n      }\n    },\n    goBack() {\n      this.$router.push('/member/list');\n    }\n  }\n};","map":{"version":3,"names":["axios","getResultData","getErrorMessage","data","member","id","name","email","role","created","memberId","$route","params","console","log","route","thismemberId","memberIdType","error","alert","$router","push","getMemberDetail","methods","accessToken","localStorage","getItem","Error","process","env","VUE_APP_API_BASE_URL","response","get","headers","Authorization","status","goBack"],"sources":["/Users/purewa/Desktop/Pratice/Front_Pratice/vue-project/src/components/MemberDetailComponent.vue"],"sourcesContent":["```vue\n<template>\n  <v-container>\n    <v-row>\n      <v-col>\n        <v-card>\n          <v-card-title>회원 상세 정보</v-card-title>\n          <v-card-text>\n            <v-row>\n              <v-col cols=\"12\" md=\"6\">\n                <v-text-field\n                  label=\"ID\"\n                  :value=\"member.id\"\n                  readonly\n                />\n              </v-col>\n              <v-col cols=\"12\" md=\"6\">\n                <v-text-field\n                  label=\"이름\"\n                  :value=\"member.name\"\n                  readonly\n                />\n              </v-col>\n              <v-col cols=\"12\" md=\"6\">\n                <v-text-field\n                  label=\"이메일\"\n                  :value=\"member.email\"\n                  readonly\n                />\n              </v-col>\n              <v-col cols=\"12\" md=\"6\">\n                <v-text-field\n                  label=\"권한\"\n                  :value=\"member.role\"\n                  readonly\n                />\n              </v-col>\n            </v-row>\n          </v-card-text>\n          <v-card-actions>\n            <v-btn @click=\"goBack\">목록으로</v-btn>\n          </v-card-actions>\n        </v-card>\n      </v-col>\n    </v-row>\n  </v-container>\n</template>\n\n<script>\nimport axios from 'axios';\nimport { getResultData, getErrorMessage } from '@/utils/commonDataHandler';\n\nexport default {\n    data() {\n        return {\n            member: {\n                id: '',\n                name: '',\n                email: '',\n                role: ''\n            }\n        }\n    },\n    async created() {\n        // 🔥 안전한 파라미터 체크 추가\n        const memberId = this.$route.params.id;\n        \n        console.log('🔍 디버깅:', {\n            route: this.$route,\n            params: this.$route.params,\n            memberId: thismemberId,\n            memberIdType: typeof memberId\n        });\n        \n        if (!memberId || memberId === 'undefined') {\n            console.error('❌ 올바르지 않은 회원 ID:', memberId);\n            alert('올바르지 않은 회원 ID입니다.');\n            this.$router.push('/member/list');\n            return;\n        }\n        \n        await this.getMemberDetail();\n    },\n    methods: {\n        async getMemberDetail() {\n            try {\n                const accessToken = localStorage.getItem('accessToken');\n                const memberId = this.$route.params.id;\n                \n                // 🔥 다시 한번 체크\n                if (!memberId || memberId === 'undefined') {\n                    throw new Error('회원 ID가 유효하지 않습니다.');\n                }\n                \n                console.log('📤 API 요청 URL:', `${process.env.VUE_APP_API_BASE_URL}/member/detail/${memberId}`);\n                \n                const response = await axios.get(\n                    `${process.env.VUE_APP_API_BASE_URL}/member/detail/${memberId}`,\n                    {\n                        headers: {\n                            Authorization: `Bearer ${accessToken}`\n                        }\n                    }\n                );\n                \n                this.member = getResultData(response);\n                console.log('✅ 회원 정보 로드 성공:', this.member);\n                \n            } catch (error) {\n                console.error('❌ getMemberDetail 오류:', error);\n                \n                if (error.response?.status === 401) {\n                    alert('관리자 권한이 필요합니다.');\n                    this.$router.push('/member/login');\n                } else if (error.response?.status === 403) {\n                    alert('접근 권한이 없습니다.');\n                    this.$router.push('/member/list');\n                } else {\n                    alert(getErrorMessage(error));\n                    this.$router.push('/member/list');\n                }\n            }\n        },\n        goBack() {\n            this.$router.push('/member/list');\n        }\n    }\n}\n</script>"],"mappings":";AAiDA,OAAOA,KAAI,MAAO,OAAO;AACzB,SAASC,aAAa,EAAEC,eAAc,QAAS,2BAA2B;AAE1E,eAAe;EACXC,IAAIA,CAAA,EAAG;IACH,OAAO;MACHC,MAAM,EAAE;QACJC,EAAE,EAAE,EAAE;QACNC,IAAI,EAAE,EAAE;QACRC,KAAK,EAAE,EAAE;QACTC,IAAI,EAAE;MACV;IACJ;EACJ,CAAC;EACD,MAAMC,OAAOA,CAAA,EAAG;IACZ;IACA,MAAMC,QAAO,GAAI,IAAI,CAACC,MAAM,CAACC,MAAM,CAACP,EAAE;IAEtCQ,OAAO,CAACC,GAAG,CAAC,SAAS,EAAE;MACnBC,KAAK,EAAE,IAAI,CAACJ,MAAM;MAClBC,MAAM,EAAE,IAAI,CAACD,MAAM,CAACC,MAAM;MAC1BF,QAAQ,EAAEM,YAAY;MACtBC,YAAY,EAAE,OAAOP;IACzB,CAAC,CAAC;IAEF,IAAI,CAACA,QAAO,IAAKA,QAAO,KAAM,WAAW,EAAE;MACvCG,OAAO,CAACK,KAAK,CAAC,kBAAkB,EAAER,QAAQ,CAAC;MAC3CS,KAAK,CAAC,mBAAmB,CAAC;MAC1B,IAAI,CAACC,OAAO,CAACC,IAAI,CAAC,cAAc,CAAC;MACjC;IACJ;IAEA,MAAM,IAAI,CAACC,eAAe,CAAC,CAAC;EAChC,CAAC;EACDC,OAAO,EAAE;IACL,MAAMD,eAAeA,CAAA,EAAG;MACpB,IAAI;QACA,MAAME,WAAU,GAAIC,YAAY,CAACC,OAAO,CAAC,aAAa,CAAC;QACvD,MAAMhB,QAAO,GAAI,IAAI,CAACC,MAAM,CAACC,MAAM,CAACP,EAAE;;QAEtC;QACA,IAAI,CAACK,QAAO,IAAKA,QAAO,KAAM,WAAW,EAAE;UACvC,MAAM,IAAIiB,KAAK,CAAC,mBAAmB,CAAC;QACxC;QAEAd,OAAO,CAACC,GAAG,CAAC,gBAAgB,EAAE,GAAGc,OAAO,CAACC,GAAG,CAACC,oBAAoB,kBAAkBpB,QAAQ,EAAE,CAAC;QAE9F,MAAMqB,QAAO,GAAI,MAAM/B,KAAK,CAACgC,GAAG,CAC5B,GAAGJ,OAAO,CAACC,GAAG,CAACC,oBAAoB,kBAAkBpB,QAAQ,EAAE,EAC/D;UACIuB,OAAO,EAAE;YACLC,aAAa,EAAE,UAAUV,WAAW;UACxC;QACJ,CACJ,CAAC;QAED,IAAI,CAACpB,MAAK,GAAIH,aAAa,CAAC8B,QAAQ,CAAC;QACrClB,OAAO,CAACC,GAAG,CAAC,gBAAgB,EAAE,IAAI,CAACV,MAAM,CAAC;MAE9C,EAAE,OAAOc,KAAK,EAAE;QACZL,OAAO,CAACK,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;QAE7C,IAAIA,KAAK,CAACa,QAAQ,EAAEI,MAAK,KAAM,GAAG,EAAE;UAChChB,KAAK,CAAC,gBAAgB,CAAC;UACvB,IAAI,CAACC,OAAO,CAACC,IAAI,CAAC,eAAe,CAAC;QACtC,OAAO,IAAIH,KAAK,CAACa,QAAQ,EAAEI,MAAK,KAAM,GAAG,EAAE;UACvChB,KAAK,CAAC,cAAc,CAAC;UACrB,IAAI,CAACC,OAAO,CAACC,IAAI,CAAC,cAAc,CAAC;QACrC,OAAO;UACHF,KAAK,CAACjB,eAAe,CAACgB,KAAK,CAAC,CAAC;UAC7B,IAAI,CAACE,OAAO,CAACC,IAAI,CAAC,cAAc,CAAC;QACrC;MACJ;IACJ,CAAC;IACDe,MAAMA,CAAA,EAAG;MACL,IAAI,CAAChB,OAAO,CAACC,IAAI,CAAC,cAAc,CAAC;IACrC;EACJ;AACJ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}