{"ast":null,"code":"import { createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_H1 = _resolveComponent(\"H1\");\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createVNode(_component_H1, null, {\n    default: _withCtx(() => _cache[2] || (_cache[2] = [_createTextVNode(\"hook실습\", -1 /* CACHED */)])),\n    _: 1 /* STABLE */,\n    __: [2]\n  }), _createElementVNode(\"button\", {\n    onClick: _cache[0] || (_cache[0] = (...args) => $options.moveScreen && $options.moveScreen(...args))\n  }, \"다른 화면으로 이동\"), _createElementVNode(\"h1\", null, _toDisplayString($data.count1), 1 /* TEXT */), _createElementVNode(\"button\", {\n    onClick: _cache[1] || (_cache[1] = $event => _ctx.incrementCount())\n  }, \"count1증가\"), _cache[3] || (_cache[3] = _createElementVNode(\"h1\", null, \"computed된값: \" + _toDisplayString({}), -1 /* CACHED */))], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"names":["_createVNode","_component_H1","_cache","_createElementVNode","onClick","args","$options","moveScreen","_toDisplayString","$data","count1","$event","_ctx","incrementCount"],"sources":["/Users/purewa/Desktop/Pratice/Front_Pratice/vue-project/src/components/practice/3.HookComponent.vue"],"sourcesContent":["\n<template>\n    <H1>hook실습</H1>\n    <button @click=\"moveScreen\">다른 화면으로 이동</button>\n    <h1>{{ count1 }}</h1>\n    <button @click=\"incrementCount()\">count1증가</button>\n    <h1>computed된값: {{ {} }}</h1>\n</template>\n\n<script>\nexport default {\n    data(){\n        return{\n            count1: 0,\n\n        }\n    },\n    // created(){\n    //     alert('created테스트')\n    // },\n    // 컴포넌트가 화면상에서 제거될때 실행되는 함수\n    // 예시) 채팅화면을 벗어나 다른화면으로 이동시에 실시간 연결 종료\n    beforeUnmount(){\n        alert(\"화면종료\")\n    },\n    // 종속된 데이터가 변경될떄 함수를 다실 행하여 값을 계산하는것\n    computed:{\n        doubleCount(){\n            return this.count1 * 2\n        }   \n    },\n    methods:{\n        moveScreen(){\n            this.$router.push(\"/practice/VuetifyComponent\")\n        }\n    }\n}\n</script>"],"mappings":";;;6DAEIA,YAAA,CAAeC,aAAA;sBAAX,MAAMC,MAAA,QAAAA,MAAA,O,iBAAN,QAAM,mB;;;MACVC,mBAAA,CAA+C;IAAtCC,OAAK,EAAAF,MAAA,QAAAA,MAAA,UAAAG,IAAA,KAAEC,QAAA,CAAAC,UAAA,IAAAD,QAAA,CAAAC,UAAA,IAAAF,IAAA,CAAU;KAAE,YAAU,GACtCF,mBAAA,CAAqB,YAAAK,gBAAA,CAAdC,KAAA,CAAAC,MAAM,kBACbP,mBAAA,CAAmD;IAA1CC,OAAK,EAAAF,MAAA,QAAAA,MAAA,MAAAS,MAAA,IAAEC,IAAA,CAAAC,cAAc;KAAI,UAAQ,G,0BAC1CV,mBAAA,CAA6B,YAAzB,cAAY,GAAAK,gBAAA,CAAG,EAAE,qB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}