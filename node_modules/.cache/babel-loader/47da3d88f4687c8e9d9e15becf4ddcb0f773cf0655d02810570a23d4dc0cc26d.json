{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_HelloWorld = _resolveComponent(\"HelloWorld\");\n  const _component_HelloWorld2 = _resolveComponent(\"HelloWorld2\");\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createVNode(_component_HelloWorld, {\n    msg: \"Welcome to Your Vue.js App\"\n  }), _createVNode(_component_HelloWorld2, {\n    msg: \"And this is HelloWorld2!\"\n  })], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"names":["_createVNode","_component_HelloWorld","msg","_component_HelloWorld2"],"sources":["/Users/purewa/Desktop/Pratice/Front_Pratice/vue-project/src/App.vue"],"sourcesContent":["// 화면요소는 template태그 안에 코딩\n<template>\n  <HelloWorld msg=\"Welcome to Your Vue.js App\"/>\n  <HelloWorld2 msg=\"And this is HelloWorld2!\"/>\n</template>\n\n\n// script에는 js를 코딩\n<script>\nimport HelloWorld from './components/HelloWorld.vue'\nimport HelloWorld2 from './components/HelloWorld2.vue'\n\n\n// vue는 export를 통하여 해당요소를 다른 화면에서도 import할 수 있도록 설정\n// 즉 아래 문법은 App.vue라는 화면을 다른파일에서도 import할수있도록 컴포넌트 화시킨것\nexport default {\n  name: 'App',\n  // 다른 화면을 import한 이후에 template에서 해당 컴포넌트를 사용하려고할떄에는 components\n  components: {\n    HelloWorld,\n    HelloWorld2\n  }\n}\n</script>\n<!-- 디자인요소는 style태그 안에 코딩 --> \n<style>\n\n</style>\n"],"mappings":";;;;6DAEEA,YAAA,CAA8CC,qBAAA;IAAlCC,GAAG,EAAC;EAA4B,IAC5CF,YAAA,CAA6CG,sBAAA;IAAhCD,GAAG,EAAC;EAA0B,G","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}