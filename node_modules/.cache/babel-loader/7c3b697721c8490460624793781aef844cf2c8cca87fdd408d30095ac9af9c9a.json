{"ast":null,"code":"import { createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, createCommentVNode as _createCommentVNode, openBlock as _openBlock, createBlock as _createBlock } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_v_card_title = _resolveComponent(\"v-card-title\");\n  const _component_v_text_field = _resolveComponent(\"v-text-field\");\n  const _component_v_btn = _resolveComponent(\"v-btn\");\n  const _component_v_col = _resolveComponent(\"v-col\");\n  const _component_v_row = _resolveComponent(\"v-row\");\n  const _component_v_form = _resolveComponent(\"v-form\");\n  const _component_v_card_text = _resolveComponent(\"v-card-text\");\n  const _component_v_container = _resolveComponent(\"v-container\");\n  return _openBlock(), _createBlock(_component_v_container, null, {\n    default: _withCtx(() => [_createVNode(_component_v_row, {\n      justify: \"center\"\n    }, {\n      default: _withCtx(() => [_createVNode(_component_v_col, {\n        cols: \"6\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_v_card_title, {\n          class: \"text-h5 text-center\"\n        }, {\n          default: _withCtx(() => _cache[3] || (_cache[3] = [_createTextVNode(\" 로그인 \", -1 /* CACHED */)])),\n          _: 1 /* STABLE */,\n          __: [3]\n        }), _createVNode(_component_v_card_text, null, {\n          default: _withCtx(() => [_createVNode(_component_v_form, null, {\n            default: _withCtx(() => [_createVNode(_component_v_text_field, {\n              label: \"이메일\",\n              type: \"email\",\n              modelValue: $data.email,\n              \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.email = $event),\n              \"prepend-icon\": \"mdi-email\"\n            }, null, 8 /* PROPS */, [\"modelValue\"]), _createVNode(_component_v_text_field, {\n              label: \"비밀번호\",\n              type: \"password\",\n              modelValue: $data.password,\n              \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $data.password = $event),\n              \"prepend-icon\": \"mdi-lock\"\n            }, null, 8 /* PROPS */, [\"modelValue\"]), _createVNode(_component_v_row, null, {\n              default: _withCtx(() => [_createVNode(_component_v_col, null, {\n                default: _withCtx(() => [_createCommentVNode(\" block : 속한 row에서 너비를 꽉채우는 옵션 \"), _createVNode(_component_v_btn, {\n                  color: \"primary\",\n                  block: \"\",\n                  onClick: _cache[2] || (_cache[2] = $event => $options.memberLogin())\n                }, {\n                  default: _withCtx(() => _cache[4] || (_cache[4] = [_createTextVNode(\" 로그인 \", -1 /* CACHED */)])),\n                  _: 1 /* STABLE */,\n                  __: [4]\n                })]),\n                _: 1 /* STABLE */\n              })]),\n              _: 1 /* STABLE */\n            })]),\n            _: 1 /* STABLE */\n          })]),\n          _: 1 /* STABLE */\n        })]),\n        _: 1 /* STABLE */\n      })]),\n      _: 1 /* STABLE */\n    })]),\n    _: 1 /* STABLE */\n  });\n}","map":{"version":3,"names":["_createBlock","_component_v_container","_createVNode","_component_v_row","justify","_component_v_col","cols","_component_v_card_title","class","_cache","_component_v_card_text","_component_v_form","_component_v_text_field","label","type","$data","email","$event","password","_createCommentVNode","_component_v_btn","color","block","onClick","$options","memberLogin"],"sources":["/Users/purewa/Desktop/Pratice/Front_Pratice/vue-project/src/views/MemberLogin.vue"],"sourcesContent":["<template>\n    <v-container>\n        <v-row justify=\"center\">\n            <v-col cols=\"6\">\n                <v-card-title class=\"text-h5 text-center\">\n                    로그인\n                </v-card-title>\n                <v-card-text>\n                    <v-form>\n                        <v-text-field\n                            label=\"이메일\"\n                            type=\"email\"\n                            v-model=\"email\"\n                            prepend-icon=\"mdi-email\"\n                            \n                        />\n                        <v-text-field\n                            label=\"비밀번호\"\n                            type=\"password\"\n                            v-model=\"password\"\n                            prepend-icon=\"mdi-lock\"\n                        />\n                        <v-row>\n                            <v-col>\n                                <!-- block : 속한 row에서 너비를 꽉채우는 옵션 -->\n                                <v-btn color=\"primary\" block @click=\"memberLogin()\">\n                                    로그인\n                                </v-btn>\n                            </v-col>\n                        </v-row>\n                    </v-form>\n                </v-card-text>\n            </v-col>\n        </v-row>\n    </v-container>\n</template>\n\n<script>\nimport { getResultData } from '@/utils/commonDataHandler';\nimport axios from 'axios';\n\nexport default {\n    data(){\n        return {\n            email: \"\",\n            password:\"\",\n        }\n    },\n    methods:{\n        async memberLogin(){\n    try{\n        const data = {\n            email: this.email,\n            password: this.password\n        }\n        const response = await axios.post(`${process.env.VUE_APP_API_BASE_URL}/member/doLogin`, data)\n        const result = getResultData\n        console.log('전체 응답 데이터:', response.data);\n        \n        const accessToken = response.data.result.accessToken;\n        const refreshToken = response.data.result.refreshToken;\n        \n        console.log('accessToken:', accessToken);\n        console.log('refreshToken:', refreshToken);\n        \n        localStorage.setItem('accessToken', accessToken);\n        localStorage.setItem('refreshToken', refreshToken);\n\n        // ✅ 둘 중 하나만 사용하세요!\n        // 옵션 1: 페이지 새로고침\n        window.location.reload();\n        \n        // 옵션 2: 라우터로 이동 (위 줄 주석처리하고 사용)\n        // this.$router.push('/practice/test')\n        \n    } catch(e) {\n        console.error('오류:', e);\n        if (e.response && e.response.data) {\n            alert(ret);\n        } else {\n            alert('로그인 중 오류가 발생했습니다.');\n            }\n        }\n    }\n    }\n    }\n</script>"],"mappings":";;;;;;;;;;uBACIA,YAAA,CAiCcC,sBAAA;sBAhCV,MA+BQ,CA/BRC,YAAA,CA+BQC,gBAAA;MA/BDC,OAAO,EAAC;IAAQ;wBACnB,MA6BQ,CA7BRF,YAAA,CA6BQG,gBAAA;QA7BDC,IAAI,EAAC;MAAG;0BACX,MAEe,CAFfJ,YAAA,CAEeK,uBAAA;UAFDC,KAAK,EAAC;QAAqB;4BAAC,MAE1CC,MAAA,QAAAA,MAAA,O,iBAF0C,OAE1C,mB;;;YACAP,YAAA,CAwBcQ,sBAAA;4BAvBV,MAsBS,CAtBTR,YAAA,CAsBSS,iBAAA;8BArBL,MAME,CANFT,YAAA,CAMEU,uBAAA;cALEC,KAAK,EAAC,KAAK;cACXC,IAAI,EAAC,OAAO;0BACHC,KAAA,CAAAC,KAAK;yEAALD,KAAA,CAAAC,KAAK,GAAAC,MAAA;cACd,cAAY,EAAC;qDAGjBf,YAAA,CAKEU,uBAAA;cAJEC,KAAK,EAAC,MAAM;cACZC,IAAI,EAAC,UAAU;0BACNC,KAAA,CAAAG,QAAQ;yEAARH,KAAA,CAAAG,QAAQ,GAAAD,MAAA;cACjB,cAAY,EAAC;qDAEjBf,YAAA,CAOQC,gBAAA;gCANJ,MAKQ,CALRD,YAAA,CAKQG,gBAAA;kCAJJ,MAAqC,CAArCc,mBAAA,kCAAqC,EACrCjB,YAAA,CAEQkB,gBAAA;kBAFDC,KAAK,EAAC,SAAS;kBAACC,KAAK,EAAL,EAAK;kBAAEC,OAAK,EAAAd,MAAA,QAAAA,MAAA,MAAAQ,MAAA,IAAEO,QAAA,CAAAC,WAAW;;oCAAI,MAEpDhB,MAAA,QAAAA,MAAA,O,iBAFoD,OAEpD,mB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}