{"ast":null,"code":"import axios from 'axios';\nexport default {\n  data() {\n    return {\n      isLogined: false,\n      productList: [] //{id:1, name: \"사과\",price:1000},{id:2, name: \"배\",price:2000},{id:3, name: \"귤\",price:4000}\n    };\n  },\n  async created() {\n    try {\n      const response = await axios.get(\"http://localhost:8080/product/list\");\n      console.log('성공:', response);\n      this.productList = response.data.result.content;\n    } catch (error) {\n      console.error('전체 오류:', error);\n      console.error('오류 상세:', error.response);\n      if (error.response) {\n        // 서버가 오류 응답을 보냈\n        console.error('상태코드:', error.response.status);\n        console.error('오류 데이터:', error.response.data);\n        console.error('헤더:', error.response.headers);\n      } else if (error.request) {\n        // 요청은 보냈지만 응답을 받지 못함\n        console.error('요청 오류:', error.request);\n      } else {\n        // 요청 설정 중 오류 발생\n        console.error('설정 오류:', error.message);\n      }\n\n      // 임시 더미 데이터\n      this.productList = [{\n        id: 1,\n        name: \"사과\",\n        price: 1000\n      }, {\n        id: 2,\n        name: \"배\",\n        price: 2000\n      }, {\n        id: 3,\n        name: \"귀\",\n        price: 4000\n      }];\n    }\n  },\n  methods: {\n    doLogin() {\n      this.isLogined = true;\n    },\n    doLogout() {\n      this.isLogined = false;\n    }\n  }\n};","map":{"version":3,"names":["axios","data","isLogined","productList","created","response","get","console","log","result","content","error","status","headers","request","message","id","name","price","methods","doLogin","doLogout"],"sources":["/Users/purewa/Desktop/Pratice/Front_Pratice/vue-project/src/components/practice/2.ConditionalCoponent.vue"],"sourcesContent":["<template>\n    <h1>vue 조건식</h1>\n\n    <button v-if=!isLogined @click=\"doLogin()\">로그인버튼</button>\n    <button v-if= isLogined @click=\"doLogout()\">로그아웃버튼</button>\n    <div v-if=\"!isLogined\">로그인 해주세요</div>\n    <div v-if=\"isLogined\">환영합니다.</div>\n\n    <h1>상품목록조회</h1>\n    <table>\n        <thead>\n            <tr>\n                <th>상품번호</th>\n                <th>상품명</th>\n                <th>상품가격</th>\n            </tr>\n        </thead>\n        <tbody>\n            <tr v-for=\"product in productList\" :key=\"product.id\">\n                <td>{{ product.id }}</td>\n                <td>{{ product.name }}</td>\n                <td>{{ product.price }}</td>\n            </tr>\n        </tbody>\n    </table>\n</template>\n\n<script>\nimport axios from 'axios'\n\nexport default {\n    data(){\n        return{\n            isLogined: false,\n            productList:[]//{id:1, name: \"사과\",price:1000},{id:2, name: \"배\",price:2000},{id:3, name: \"귤\",price:4000}\n        }\n    },\n    async created(){\n        try {\n            const response = await axios.get(\"http://localhost:8080/product/list\");\n            console.log('성공:', response);\n            this.productList = response.data.result.content;\n        } catch (error) {\n            console.error('전체 오류:', error);\n            console.error('오류 상세:', error.response);\n            \n            if (error.response) {\n                // 서버가 오류 응답을 보냈\n                console.error('상태코드:', error.response.status);\n                console.error('오류 데이터:', error.response.data);\n                console.error('헤더:', error.response.headers);\n            } else if (error.request) {\n                // 요청은 보냈지만 응답을 받지 못함\n                console.error('요청 오류:', error.request);\n            } else {\n                // 요청 설정 중 오류 발생\n                console.error('설정 오류:', error.message);\n            }\n            \n            // 임시 더미 데이터\n            this.productList = [\n                {id:1, name: \"사과\", price:1000},\n                {id:2, name: \"배\", price:2000},\n                {id:3, name: \"귀\", price:4000}\n            ];\n        }\n    },\n    methods: {\n        doLogin(){\n            this.isLogined = true\n        },\n        doLogout(){\n            this.isLogined = false\n        }\n    }\n}\n</script>"],"mappings":"AA4BA,OAAOA,KAAI,MAAO,OAAM;AAExB,eAAe;EACXC,IAAIA,CAAA,EAAE;IACF,OAAM;MACFC,SAAS,EAAE,KAAK;MAChBC,WAAW,EAAC,EAAE;IAClB;EACJ,CAAC;EACD,MAAMC,OAAOA,CAAA,EAAE;IACX,IAAI;MACA,MAAMC,QAAO,GAAI,MAAML,KAAK,CAACM,GAAG,CAAC,oCAAoC,CAAC;MACtEC,OAAO,CAACC,GAAG,CAAC,KAAK,EAAEH,QAAQ,CAAC;MAC5B,IAAI,CAACF,WAAU,GAAIE,QAAQ,CAACJ,IAAI,CAACQ,MAAM,CAACC,OAAO;IACnD,EAAE,OAAOC,KAAK,EAAE;MACZJ,OAAO,CAACI,KAAK,CAAC,QAAQ,EAAEA,KAAK,CAAC;MAC9BJ,OAAO,CAACI,KAAK,CAAC,QAAQ,EAAEA,KAAK,CAACN,QAAQ,CAAC;MAEvC,IAAIM,KAAK,CAACN,QAAQ,EAAE;QAChB;QACAE,OAAO,CAACI,KAAK,CAAC,OAAO,EAAEA,KAAK,CAACN,QAAQ,CAACO,MAAM,CAAC;QAC7CL,OAAO,CAACI,KAAK,CAAC,SAAS,EAAEA,KAAK,CAACN,QAAQ,CAACJ,IAAI,CAAC;QAC7CM,OAAO,CAACI,KAAK,CAAC,KAAK,EAAEA,KAAK,CAACN,QAAQ,CAACQ,OAAO,CAAC;MAChD,OAAO,IAAIF,KAAK,CAACG,OAAO,EAAE;QACtB;QACAP,OAAO,CAACI,KAAK,CAAC,QAAQ,EAAEA,KAAK,CAACG,OAAO,CAAC;MAC1C,OAAO;QACH;QACAP,OAAO,CAACI,KAAK,CAAC,QAAQ,EAAEA,KAAK,CAACI,OAAO,CAAC;MAC1C;;MAEA;MACA,IAAI,CAACZ,WAAU,GAAI,CACf;QAACa,EAAE,EAAC,CAAC;QAAEC,IAAI,EAAE,IAAI;QAAEC,KAAK,EAAC;MAAI,CAAC,EAC9B;QAACF,EAAE,EAAC,CAAC;QAAEC,IAAI,EAAE,GAAG;QAAEC,KAAK,EAAC;MAAI,CAAC,EAC7B;QAACF,EAAE,EAAC,CAAC;QAAEC,IAAI,EAAE,GAAG;QAAEC,KAAK,EAAC;MAAI,EAC/B;IACL;EACJ,CAAC;EACDC,OAAO,EAAE;IACLC,OAAOA,CAAA,EAAE;MACL,IAAI,CAAClB,SAAQ,GAAI,IAAG;IACxB,CAAC;IACDmB,QAAQA,CAAA,EAAE;MACN,IAAI,CAACnB,SAAQ,GAAI,KAAI;IACzB;EACJ;AACJ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}