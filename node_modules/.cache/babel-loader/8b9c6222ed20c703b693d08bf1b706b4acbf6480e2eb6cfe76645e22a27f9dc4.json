{"ast":null,"code":"import { createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createBlock as _createBlock } from \"vue\";\nexport function render(_ctx, _cache) {\n  const _component_v_card_title = _resolveComponent(\"v-card-title\");\n  const _component_v_table = _resolveComponent(\"v-table\");\n  const _component_v_card_text = _resolveComponent(\"v-card-text\");\n  const _component_v_card = _resolveComponent(\"v-card\");\n  const _component_v_row = _resolveComponent(\"v-row\");\n  const _component_v_container = _resolveComponent(\"v-container\");\n  return _openBlock(), _createBlock(_component_v_container, null, {\n    default: _withCtx(() => [_createVNode(_component_v_row, null, {\n      default: _withCtx(() => [_createVNode(_component_v_card, null, {\n        default: _withCtx(() => [_createVNode(_component_v_card_title, {\n          class: \"text-h5 text-center\"\n        }, {\n          default: _withCtx(() => _cache[0] || (_cache[0] = [_createTextVNode(\" 회원목록 \", -1 /* CACHED */)])),\n          _: 1 /* STABLE */,\n          __: [0]\n        }), _createVNode(_component_v_card_text, null, {\n          default: _withCtx(() => [_createVNode(_component_v_table, null, {\n            default: _withCtx(() => [_cache[1] || (_cache[1] = _createElementVNode(\"thead\", null, [_createElementVNode(\"tr\"), _createElementVNode(\"th\", null, \"ID\"), _createElementVNode(\"th\", null, \"이름\"), _createElementVNode(\"th\", null, \"이메일\"), _createElementVNode(\"tr\")], -1 /* CACHED */)), _createElementVNode(\"tbody\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.memberList, member => {\n              return _openBlock(), _createElementBlock(\"tr\", {\n                key: member.id\n              }, [_createElementVNode(\"td\", null, _toDisplayString(member.id), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(member.name), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(member.email), 1 /* TEXT */)]);\n            }), 128 /* KEYED_FRAGMENT */))])]),\n            _: 1 /* STABLE */,\n            __: [1]\n          })]),\n          _: 1 /* STABLE */\n        })]),\n        _: 1 /* STABLE */\n      })]),\n      _: 1 /* STABLE */\n    })]),\n    _: 1 /* STABLE */\n  });\n}","map":{"version":3,"names":["_createBlock","_component_v_container","_createVNode","_component_v_row","_component_v_card","_component_v_card_title","class","_cache","_component_v_card_text","_component_v_table","_createElementVNode","_createElementBlock","_Fragment","_renderList","_ctx","memberList","member","key","id","_toDisplayString","name","email"],"sources":["/Users/purewa/Desktop/Pratice/Front_Pratice/vue-project/src/components/MemberListComponent.vue"],"sourcesContent":["<template>\n    <v-container>\n        <v-row>\n            <v-card>\n                <v-card-title class=\"text-h5 text-center\">\n                    회원목록\n                </v-card-title>\n                <v-card-text>\n                    <v-table>\n                        <thead>\n                            <tr></tr><th>ID</th><th>이름</th><th>이메일</th><tr></tr>\n                        </thead>\n                        <tbody>\n                            <tr v-for=\"member in memberList\" :key=\"member.id\">\n                                <td>{{ member.id }}</td>\n                                <td>{{ member.name }}</td>\n                                <td>{{ member.email }}</td>\n                            </tr>\n\n                        </tbody>\n                    </v-table>\n                </v-card-text>\n            </v-card>\n        </v-row>\n    </v-container>\n</template>\n\n<script>\nimport axios from 'axios';\nimport { getResultData } from '@/utils/commonDataHandler';\n\nexport default{\n    data(){\n        return {\n            memberList: []\n            accessToken: null // 추가\n\n        }\n    },\n    async created(){\n        try{\n            const response = await axios.get(`${process.env.VUE_APP_API_BASE_URL}/member/list`, {\n            headers: {\n                Authorization: `Bearer ${accessToken}`\n            }\n        });\n            this.memberList = getResultData(response)\n        }catch(e){\n            console.log(e);\n            if (e.response && e.response.data) {\n                alert(e.response.data.statusMessage || '회원 목록 조회에 실패했습니다.')\n            } else {\n                alert('서버 연결에 실패했습니다.')\n            }\n        }\n    }\n}\n</script>"],"mappings":";;;;;;;;uBACIA,YAAA,CAuBcC,sBAAA;sBAtBV,MAqBQ,CArBRC,YAAA,CAqBQC,gBAAA;wBApBJ,MAmBS,CAnBTD,YAAA,CAmBSE,iBAAA;0BAlBL,MAEe,CAFfF,YAAA,CAEeG,uBAAA;UAFDC,KAAK,EAAC;QAAqB;4BAAC,MAE1CC,MAAA,QAAAA,MAAA,O,iBAF0C,QAE1C,mB;;;YACAL,YAAA,CAccM,sBAAA;4BAbV,MAYU,CAZVN,YAAA,CAYUO,kBAAA;8BAXN,MAEQ,C,0BAFRC,mBAAA,CAEQ,gBADJA,mBAAA,CAAS,OAAAA,mBAAA,CAAW,YAAP,IAAE,GAAKA,mBAAA,CAAW,YAAP,IAAE,GAAKA,mBAAA,CAAY,YAAR,KAAG,GAAKA,mBAAA,CAAS,M,qBAExDA,mBAAA,CAOQ,iB,kBANJC,mBAAA,CAIKC,SAAA,QAAAC,WAAA,CAJgBC,IAAA,CAAAC,UAAU,EAApBC,MAAM;mCAAjBL,mBAAA,CAIK;gBAJ6BM,GAAG,EAAED,MAAM,CAACE;kBAC1CR,mBAAA,CAAwB,YAAAS,gBAAA,CAAjBH,MAAM,CAACE,EAAE,kBAChBR,mBAAA,CAA0B,YAAAS,gBAAA,CAAnBH,MAAM,CAACI,IAAI,kBAClBV,mBAAA,CAA2B,YAAAS,gBAAA,CAApBH,MAAM,CAACK,KAAK,iB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}