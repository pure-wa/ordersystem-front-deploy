{"ast":null,"code":"import { createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_v_btn = _resolveComponent(\"v-btn\");\n  return _openBlock(), _createElementBlock(_Fragment, null, [_cache[4] || (_cache[4] = _createElementVNode(\"h1\", null, \"store component A\", -1 /* CACHED */)), _createElementVNode(\"p\", null, \"지역변수값 count : \" + _toDisplayString($data.count), 1 /* TEXT */), _createVNode(_component_v_btn, {\n    onClick: _cache[0] || (_cache[0] = $event => $options.incrementCount())\n  }, {\n    default: _withCtx(() => _cache[2] || (_cache[2] = [_createTextVNode(\"카운트 증가\", -1 /* CACHED */)])),\n    _: 1 /* STABLE */,\n    __: [2]\n  }), _createElementVNode(\"p\", null, \"전역store변수값 count : \" + _toDisplayString($options.getStoreCount), 1 /* TEXT */), _createVNode(_component_v_btn, {\n    onClick: _cache[1] || (_cache[1] = $event => $options.incrementStoreCount())\n  }, {\n    default: _withCtx(() => _cache[3] || (_cache[3] = [_createTextVNode(\"전역store 카운트 증가\", -1 /* CACHED */)])),\n    _: 1 /* STABLE */,\n    __: [3]\n  })], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"names":["_createElementVNode","_toDisplayString","$data","count","_createVNode","_component_v_btn","onClick","_cache","$event","$options","incrementCount","getStoreCount","incrementStoreCount"],"sources":["/Users/purewa/Desktop/Pratice/dev front/src/components/practice/6.StoreTestComponentA.vue"],"sourcesContent":["<template>\n    <h1>store component A</h1>\n    <p>지역변수값 count : {{ count }}</p>\n    <v-btn @click=\"incrementCount()\">카운트 증가</v-btn>\n    <p>전역store변수값 count : {{ getStoreCount }}</p>\n    <v-btn @click=\"incrementStoreCount()\">전역store 카운트 증가</v-btn>\n</template>\n<script>\n    export default {\n        data() {\n            return {\n                count: 0,\n            }\n        },\n        computed: {\n            getStoreCount() {\n                return this.$store.getters.getCount;\n            },\n        },\n        methods: {\n            incrementCount() {\n                this.count++;\n            },\n            incrementStoreCount() {\n                // store의 actions를 호출할 때는 dispatch함수 사용\n                this.$store.dispatch(\"incrementCount\");\n            },\n        }\n    }\n</script>"],"mappings":";;;uFACIA,mBAAA,CAA0B,YAAtB,mBAAiB,qBACrBA,mBAAA,CAAgC,WAA7B,gBAAc,GAAAC,gBAAA,CAAGC,KAAA,CAAAC,KAAK,kBACzBC,YAAA,CAA+CC,gBAAA;IAAvCC,OAAK,EAAAC,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAAEC,QAAA,CAAAC,cAAc;;sBAAI,MAAMH,MAAA,QAAAA,MAAA,O,iBAAN,QAAM,mB;;;MACvCP,mBAAA,CAA6C,WAA1C,qBAAmB,GAAAC,gBAAA,CAAGQ,QAAA,CAAAE,aAAa,kBACtCP,YAAA,CAA4DC,gBAAA;IAApDC,OAAK,EAAAC,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAAEC,QAAA,CAAAG,mBAAmB;;sBAAI,MAAcL,MAAA,QAAAA,MAAA,O,iBAAd,gBAAc,mB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}