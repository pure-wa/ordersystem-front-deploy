{"ast":null,"code":"import \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.find.js\";\nfunction initState() {\n  return {\n    totalQuantity: localStorage.getItem(\"localQuantity\") || 0,\n    productsIncart: JSON.parse(localStorage.getItem(\"productsIncart\")) || []\n  };\n}\nexport const cart = {\n  state: initState,\n  mutations: {\n    addCart(state, product) {\n      // 장바구니 수량\n      state.totalQuantity = parseInt(state.totalQuantity) + product.productCount;\n      localStorage.setItem(\"localQuantity\", state.totalQuantity);\n\n      // 장바구니 안에 상품목록\n      const existProduct = state.productsIncart.find(p => p.productId === product.product.id);\n      if (existProduct) {\n        ex;\n      } else {}\n    }\n  },\n  actions: {\n    addCart(commit, productCount) {\n      commit.addCart(\"addCart\", productCount);\n    }\n  },\n  getters: {\n    getTotalQuantity: state => state.totalQuantity\n  }\n};","map":{"version":3,"names":["initState","totalQuantity","localStorage","getItem","productsIncart","JSON","parse","cart","state","mutations","addCart","product","parseInt","productCount","setItem","existProduct","find","p","productId","id","ex","actions","commit","getters","getTotalQuantity"],"sources":["/Users/purewa/Desktop/Pratice/Front_Pratice/vue-project/src/store/cart.js"],"sourcesContent":["function initState(){\n    return {\n        totalQuantity: localStorage.getItem(\"localQuantity\") || 0,\n        productsIncart: JSON.parse(localStorage.getItem(\"productsIncart\")) || [] \n    }\n}\n\nexport const cart = {\n    state: initState,\n    mutations : {\n        addCart(state,product){       \n            // 장바구니 수량\n            state.totalQuantity = parseInt(state.totalQuantity) + product.productCount;\n            localStorage.setItem(\"localQuantity\",state.totalQuantity)\n\n            // 장바구니 안에 상품목록\n            const existProduct =state.productsIncart.find(p => p.productId === product.product.id);\n            if (existProduct){\n                ex\n            }else{\n\n            }\n    }    \n},\n    actions :{\n        addCart(commit,productCount){\n            commit.addCart(\"addCart\",productCount)\n        }\n    },\n    getters:{\n        getTotalQuantity: state => state.totalQuantity\n        \n    }\n}"],"mappings":";;AAAA,SAASA,SAASA,CAAA,EAAE;EAChB,OAAO;IACHC,aAAa,EAAEC,YAAY,CAACC,OAAO,CAAC,eAAe,CAAC,IAAI,CAAC;IACzDC,cAAc,EAAEC,IAAI,CAACC,KAAK,CAACJ,YAAY,CAACC,OAAO,CAAC,gBAAgB,CAAC,CAAC,IAAI;EAC1E,CAAC;AACL;AAEA,OAAO,MAAMI,IAAI,GAAG;EAChBC,KAAK,EAAER,SAAS;EAChBS,SAAS,EAAG;IACRC,OAAOA,CAACF,KAAK,EAACG,OAAO,EAAC;MAClB;MACAH,KAAK,CAACP,aAAa,GAAGW,QAAQ,CAACJ,KAAK,CAACP,aAAa,CAAC,GAAGU,OAAO,CAACE,YAAY;MAC1EX,YAAY,CAACY,OAAO,CAAC,eAAe,EAACN,KAAK,CAACP,aAAa,CAAC;;MAEzD;MACA,MAAMc,YAAY,GAAEP,KAAK,CAACJ,cAAc,CAACY,IAAI,CAACC,CAAC,IAAIA,CAAC,CAACC,SAAS,KAAKP,OAAO,CAACA,OAAO,CAACQ,EAAE,CAAC;MACtF,IAAIJ,YAAY,EAAC;QACbK,EAAE;MACN,CAAC,MAAI,CAEL;IACR;EACJ,CAAC;EACGC,OAAO,EAAE;IACLX,OAAOA,CAACY,MAAM,EAACT,YAAY,EAAC;MACxBS,MAAM,CAACZ,OAAO,CAAC,SAAS,EAACG,YAAY,CAAC;IAC1C;EACJ,CAAC;EACDU,OAAO,EAAC;IACJC,gBAAgB,EAAEhB,KAAK,IAAIA,KAAK,CAACP;EAErC;AACJ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}