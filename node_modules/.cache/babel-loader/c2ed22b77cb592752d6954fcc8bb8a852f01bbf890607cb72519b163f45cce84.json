{"ast":null,"code":"import { createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createBlock as _createBlock } from \"vue\";\nexport function render(_ctx, _cache) {\n  const _component_v_card_title = _resolveComponent(\"v-card-title\");\n  const _component_v_btn = _resolveComponent(\"v-btn\");\n  const _component_v_table = _resolveComponent(\"v-table\");\n  const _component_v_card_text = _resolveComponent(\"v-card-text\");\n  const _component_v_card = _resolveComponent(\"v-card\");\n  const _component_v_col = _resolveComponent(\"v-col\");\n  const _component_v_row = _resolveComponent(\"v-row\");\n  const _component_v_container = _resolveComponent(\"v-container\");\n  return _openBlock(), _createBlock(_component_v_container, null, {\n    default: _withCtx(() => [_createVNode(_component_v_row, null, {\n      default: _withCtx(() => [_createVNode(_component_v_col, null, {\n        default: _withCtx(() => [_createVNode(_component_v_card, null, {\n          default: _withCtx(() => [_createVNode(_component_v_card_title, {\n            class: \"text-center text-h5\"\n          }, {\n            default: _withCtx(() => _cache[0] || (_cache[0] = [_createTextVNode(\" 회원목록 \", -1 /* CACHED */)])),\n            _: 1 /* STABLE */,\n            __: [0]\n          }), _createVNode(_component_v_card_text, null, {\n            default: _withCtx(() => [_createVNode(_component_v_table, null, {\n              default: _withCtx(() => [_cache[2] || (_cache[2] = _createElementVNode(\"thead\", null, [_createElementVNode(\"tr\", null, [_createElementVNode(\"th\", null, \"ID\"), _createElementVNode(\"th\", null, \"이름\"), _createElementVNode(\"th\", null, \"이메일\"), _createElementVNode(\"th\", null, \"상세보기\")])], -1 /* CACHED */)), _createElementVNode(\"tbody\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.memberList, member => {\n                return _openBlock(), _createElementBlock(\"tr\", {\n                  key: member.id\n                }, [_createElementVNode(\"td\", null, _toDisplayString(member.id), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(member.name), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(member.email), 1 /* TEXT */), _createElementVNode(\"td\", null, [_createVNode(_component_v_btn, {\n                  to: `/member/detail/${member.id}`\n                }, {\n                  default: _withCtx(() => [...(_cache[1] || (_cache[1] = [_createTextVNode(\"상세보기\", -1 /* CACHED */)]))]),\n                  _: 2 /* DYNAMIC */,\n                  __: [1]\n                }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"to\"])])]);\n              }), 128 /* KEYED_FRAGMENT */))])]),\n              _: 1 /* STABLE */,\n              __: [2]\n            })]),\n            _: 1 /* STABLE */\n          })]),\n          _: 1 /* STABLE */\n        })]),\n        _: 1 /* STABLE */\n      })]),\n      _: 1 /* STABLE */\n    })]),\n    _: 1 /* STABLE */\n  });\n}","map":{"version":3,"names":["_createBlock","_component_v_container","_createVNode","_component_v_row","_component_v_col","_component_v_card","_component_v_card_title","class","_cache","_component_v_card_text","_component_v_table","_createElementVNode","_createElementBlock","_Fragment","_renderList","_ctx","memberList","member","key","id","_toDisplayString","name","email","_component_v_btn","to"],"sources":["/Users/purewa/Desktop/Pratice/Front_Pratice/vue-project/src/components/MemberListComponent.vue"],"sourcesContent":["<template>\n    <v-container>\n        <v-row>\n            <v-col>\n                <v-card>\n                    <v-card-title class=\"text-center text-h5\">\n                        회원목록\n                    </v-card-title>\n                    <v-card-text>\n                        <v-table>\n                            <thead>\n                                <tr>\n                                    <th>ID</th><th>이름</th><th>이메일</th><th>상세보기</th>\n                                </tr>\n                            </thead>\n                            <tbody>\n                                <tr v-for=\"member in memberList\" :key=\"member.id\">\n                                    <td>{{ member.id }}</td>\n                                    <td>{{ member.name }}</td>\n                                    <td>{{ member.email }}</td>\n                                    <td><v-btn :to=\"`/member/detail/${member.id}`\">상세보기</v-btn></td>\n                                </tr>\n                            </tbody>\n                        </v-table>\n                    </v-card-text>\n                </v-card>\n            </v-col>\n        </v-row>\n    </v-container>\n</template>\n\n<script>\nimport axios from 'axios';\nimport { getErrorMessage, getResultData } from '@/utils/commonDataHandler';\n\n    export default {\n        data() {\n            return {\n                memberList: [],\n            }\n        },\n        // ❌ 기존 코드 (이 부분을 교체)\nasync created(){\n    try{\n        const accessToken = localStorage.getItem(\"accessToken\");\n        const response = await axios.get(`${process.env.VUE_APP_API_BASE_URL}/member/list`, {\n            headers: {\n                Authorization: `Bearer ${accessToken}`\n            }\n        });\n        this.memberList = getResultData(response);\n    } catch(error) {\n        console.log(getErrorMessage(error));\n        alert(getErrorMessage(error));\n    }\n}\n\n// ✅ 새로운 코드 (이것으로 교체)\nasync created(){\n    try{\n        const accessToken = localStorage.getItem(\"accessToken\");\n        \n        // 토큰 존재 여부 확인\n        if (!accessToken) {\n            alert('로그인이 필요합니다.');\n            this.$router.push('/member/login');\n            return;\n        }\n        \n        console.log('사용할 토큰:', accessToken); // 디버깅용\n        \n        const response = await axios.get(`${process.env.VUE_APP_API_BASE_URL}/member/list`, {\n            headers: {\n                Authorization: `Bearer ${accessToken}`\n            }\n        });\n        \n        this.memberList = getResultData(response);\n        \n    } catch(error) {\n        console.log('오류 상세:', error.response);\n        \n        if (error.response?.status === 401) {\n            // 토큰 만료 또는 인증 실패\n            localStorage.clear();\n            alert('로그인이 만료되었습니다. 다시 로그인해주세요.');\n            this.$router.push('/member/login');\n        } else {\n            alert(getErrorMessage(error));\n        }\n    }\n},\n        methods: {\n            \n\n        }\n    }\n</script>"],"mappings":";;;;;;;;;;uBACIA,YAAA,CA2BcC,sBAAA;sBA1BV,MAyBQ,CAzBRC,YAAA,CAyBQC,gBAAA;wBAxBJ,MAuBQ,CAvBRD,YAAA,CAuBQE,gBAAA;0BAtBJ,MAqBS,CArBTF,YAAA,CAqBSG,iBAAA;4BApBL,MAEe,CAFfH,YAAA,CAEeI,uBAAA;YAFDC,KAAK,EAAC;UAAqB;8BAAC,MAE1CC,MAAA,QAAAA,MAAA,O,iBAF0C,QAE1C,mB;;;cACAN,YAAA,CAgBcO,sBAAA;8BAfV,MAcU,CAdVP,YAAA,CAcUQ,kBAAA;gCAbN,MAIQ,C,0BAJRC,mBAAA,CAIQ,gBAHJA,mBAAA,CAEK,aADDA,mBAAA,CAAW,YAAP,IAAE,GAAKA,mBAAA,CAAW,YAAP,IAAE,GAAKA,mBAAA,CAAY,YAAR,KAAG,GAAKA,mBAAA,CAAa,YAAT,MAAI,E,uBAGlDA,mBAAA,CAOQ,iB,kBANJC,mBAAA,CAKKC,SAAA,QAAAC,WAAA,CALgBC,IAAA,CAAAC,UAAU,EAApBC,MAAM;qCAAjBL,mBAAA,CAKK;kBAL6BM,GAAG,EAAED,MAAM,CAACE;oBAC1CR,mBAAA,CAAwB,YAAAS,gBAAA,CAAjBH,MAAM,CAACE,EAAE,kBAChBR,mBAAA,CAA0B,YAAAS,gBAAA,CAAnBH,MAAM,CAACI,IAAI,kBAClBV,mBAAA,CAA2B,YAAAS,gBAAA,CAApBH,MAAM,CAACK,KAAK,kBACnBX,mBAAA,CAAgE,aAA5DT,YAAA,CAAuDqB,gBAAA;kBAA/CC,EAAE,oBAAoBP,MAAM,CAACE,EAAE;;oCAAI,MAAI,KAAAX,MAAA,QAAAA,MAAA,O,iBAAJ,MAAI,mB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}