{"ast":null,"code":"import axios from 'axios';\nexport default {\n  data() {\n    return {\n      email: \"\",\n      password: \"\"\n    };\n  },\n  methods: {\n    async memberLogin() {\n      try {\n        const data = {\n          email: this.email,\n          password: this.password\n        };\n        const response = await axios.post(\"http://localhost:8080/member/doLogin\", data);\n        console.log('전체 응답 데이터:', response.data);\n        const accessToken = response.data.result.accessToken;\n        const refreshToken = response.data.result.refreshToken;\n        console.log('accessToken:', accessToken);\n        console.log('refreshToken:', refreshToken);\n        localStorage.setItem('accessToken', accessToken);\n        localStorage.setItem('refreshToken', refreshToken);\n\n        // ✅ 둘 중 하나만 사용하세요!\n        // 옵션 1: 페이지 새로고침\n        window.location.reload();\n\n        // 옵션 2: 라우터로 이동 (위 줄 주석처리하고 사용)\n        // this.$router.push('/practice/test')\n      } catch (e) {\n        console.error('오류:', e);\n        if (e.response && e.response.data) {\n          alert(e.response.data.statusMessage);\n        } else {\n          alert('로그인 중 오류가 발생했습니다.');\n        }\n      }\n    }\n  }\n};","map":{"version":3,"names":["axios","data","email","password","methods","memberLogin","response","post","console","log","accessToken","result","refreshToken","localStorage","setItem","window","location","reload","e","error","alert","statusMessage"],"sources":["/Users/purewa/Desktop/Pratice/Front_Pratice/vue-project/src/views/MemberLogin.vue"],"sourcesContent":["<template>\n    <v-container>\n        <v-row justify=\"center\">\n            <v-col cols=\"6\">\n                <v-card-title class=\"text-h5 text-center\">\n                    로그인\n                </v-card-title>\n                <v-card-text>\n                    <v-form>\n                        <v-text-field\n                            label=\"이메일\"\n                            type=\"email\"\n                            v-model=\"email\"\n                            prepend-icon=\"mdi-email\"\n                            \n                        />\n                        <v-text-field\n                            label=\"비밀번호\"\n                            type=\"password\"\n                            v-model=\"password\"\n                            prepend-icon=\"mdi-lock\"\n                        />\n                        <v-row>\n                            <v-col>\n                                <!-- block : 속한 row에서 너비를 꽉채우는 옵션 -->\n                                <v-btn color=\"primary\" block @click=\"memberLogin()\">\n                                    로그인\n                                </v-btn>\n                            </v-col>\n                        </v-row>\n                    </v-form>\n                </v-card-text>\n            </v-col>\n        </v-row>\n    </v-container>\n</template>\n\n<script>\nimport axios from 'axios';\n\nexport default {\n    data(){\n        return {\n            email: \"\",\n            password:\"\",\n        }\n    },\n    methods:{\n        async memberLogin(){\n    try{\n        const data = {\n            email: this.email,\n            password: this.password\n        }\n        const response = await axios.post(\"http://localhost:8080/member/doLogin\", data)\n        \n        console.log('전체 응답 데이터:', response.data);\n        \n        const accessToken = response.data.result.accessToken;\n        const refreshToken = response.data.result.refreshToken;\n        \n        console.log('accessToken:', accessToken);\n        console.log('refreshToken:', refreshToken);\n        \n        localStorage.setItem('accessToken', accessToken);\n        localStorage.setItem('refreshToken', refreshToken);\n\n        // ✅ 둘 중 하나만 사용하세요!\n        // 옵션 1: 페이지 새로고침\n        window.location.reload();\n        \n        // 옵션 2: 라우터로 이동 (위 줄 주석처리하고 사용)\n        // this.$router.push('/practice/test')\n        \n    } catch(e) {\n        console.error('오류:', e);\n        if (e.response && e.response.data) {\n            alert(e.response.data.statusMessage);\n        } else {\n            alert('로그인 중 오류가 발생했습니다.');\n            }\n        }\n    }\n    }\n    }\n</script>"],"mappings":"AAsCA,OAAOA,KAAI,MAAO,OAAO;AAEzB,eAAe;EACXC,IAAIA,CAAA,EAAE;IACF,OAAO;MACHC,KAAK,EAAE,EAAE;MACTC,QAAQ,EAAC;IACb;EACJ,CAAC;EACDC,OAAO,EAAC;IACJ,MAAMC,WAAWA,CAAA,EAAE;MACvB,IAAG;QACC,MAAMJ,IAAG,GAAI;UACTC,KAAK,EAAE,IAAI,CAACA,KAAK;UACjBC,QAAQ,EAAE,IAAI,CAACA;QACnB;QACA,MAAMG,QAAO,GAAI,MAAMN,KAAK,CAACO,IAAI,CAAC,sCAAsC,EAAEN,IAAI;QAE9EO,OAAO,CAACC,GAAG,CAAC,YAAY,EAAEH,QAAQ,CAACL,IAAI,CAAC;QAExC,MAAMS,WAAU,GAAIJ,QAAQ,CAACL,IAAI,CAACU,MAAM,CAACD,WAAW;QACpD,MAAME,YAAW,GAAIN,QAAQ,CAACL,IAAI,CAACU,MAAM,CAACC,YAAY;QAEtDJ,OAAO,CAACC,GAAG,CAAC,cAAc,EAAEC,WAAW,CAAC;QACxCF,OAAO,CAACC,GAAG,CAAC,eAAe,EAAEG,YAAY,CAAC;QAE1CC,YAAY,CAACC,OAAO,CAAC,aAAa,EAAEJ,WAAW,CAAC;QAChDG,YAAY,CAACC,OAAO,CAAC,cAAc,EAAEF,YAAY,CAAC;;QAElD;QACA;QACAG,MAAM,CAACC,QAAQ,CAACC,MAAM,CAAC,CAAC;;QAExB;QACA;MAEJ,EAAE,OAAMC,CAAC,EAAE;QACPV,OAAO,CAACW,KAAK,CAAC,KAAK,EAAED,CAAC,CAAC;QACvB,IAAIA,CAAC,CAACZ,QAAO,IAAKY,CAAC,CAACZ,QAAQ,CAACL,IAAI,EAAE;UAC/BmB,KAAK,CAACF,CAAC,CAACZ,QAAQ,CAACL,IAAI,CAACoB,aAAa,CAAC;QACxC,OAAO;UACHD,KAAK,CAAC,mBAAmB,CAAC;QAC1B;MACJ;IACJ;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}