{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport axios from 'axios';\nexport default {\n  data() {\n    return {\n      email: \"\",\n      password: \"\"\n    };\n  },\n  methods: {\n    async memberLogin() {\n      try {\n        const data = {\n          email: this.email,\n          password: this.password\n        };\n        const response = await axios.post(\"http://localhost:8080/member/doLogin\", data);\n\n        // 서버 응답에 토큰과 역할(role)이 포함되어 있다고 가정합니다.\n        const {\n          token,\n          role\n        } = response.data;\n        if (token) {\n          // 토큰과 역할을 localStorage에 저장합니다.\n          // localStorage는 브라우저를 닫았다 열어도 데이터가 유지됩니다.\n          localStorage.setItem('token', token);\n          localStorage.setItem('role', role);\n          // 로그인 후 헤더를 업데이트하기 위해 페이지를 새로고침하는 것이 간단한 방법입니다.\n          this.$router.push('/').then(() => window.location.reload());\n        }\n      } catch (e) {\n        console.log(e);\n        alert(e.response?.data?.status_message || \"로그인에 실패했습니다.\");\n      }\n    }\n  }\n};","map":{"version":3,"names":["axios","data","email","password","methods","memberLogin","response","post","token","role","localStorage","setItem","$router","push","then","window","location","reload","e","console","log","alert","status_message"],"sources":["/Users/purewa/Desktop/Pratice/Front_Pratice/vue-project/src/views/MemberLogin.vue"],"sourcesContent":["<template>\n    <v-container>\n        <v-row justify=\"center\">\n            <v-col cols=\"6\">\n                <v-card-title class=\"text-h5 text-center\">\n                    로그인\n                </v-card-title>\n                <v-card-text>\n                    <v-form>\n                        <v-text-field\n                            label=\"이메일\"\n                            type=\"email\"\n                            v-model=\"email\"\n                            prepend-icon=\"mdi-email\"\n                            \n                        />\n                        <v-text-field\n                            label=\"비밀번호\"\n                            type=\"password\"\n                            v-model=\"password\"\n                            prepend-icon=\"mdi-lock\"\n                        />\n                        <v-row>\n                            <v-col>\n                                <!-- block : 속한 row에서 너비를 꽉채우는 옵션 -->\n                                <v-btn color=\"primary\" block @click=\"memberLogin()\">\n                                    로그인\n                                </v-btn>\n                            </v-col>\n                        </v-row>\n                    </v-form>\n                </v-card-text>\n            </v-col>\n        </v-row>\n    </v-container>\n</template>\n\n<script>\nimport axios from 'axios';\n\nexport default {\n    data(){\n        return {\n            email: \"\",\n            password:\"\",\n        }\n    },\n    methods:{\n        async memberLogin(){\n            try{\n            const data = {\n                email:this.email,\n                password:this.password,}\n                const response = await axios.post(\"http://localhost:8080/member/doLogin\",data);\n\n                // 서버 응답에 토큰과 역할(role)이 포함되어 있다고 가정합니다.\n                const { token, role } = response.data;\n                if (token) {\n                    // 토큰과 역할을 localStorage에 저장합니다.\n                    // localStorage는 브라우저를 닫았다 열어도 데이터가 유지됩니다.\n                    localStorage.setItem('token', token);\n                    localStorage.setItem('role', role);\n                    // 로그인 후 헤더를 업데이트하기 위해 페이지를 새로고침하는 것이 간단한 방법입니다.\n                    this.$router.push('/').then(() => window.location.reload());\n                }\n            }catch(e){\n                console.log(e);\n                alert(e.response?.data?.status_message || \"로그인에 실패했습니다.\");\n            }\n        }\n    }\n}\n</script>"],"mappings":";AAsCA,OAAOA,KAAI,MAAO,OAAO;AAEzB,eAAe;EACXC,IAAIA,CAAA,EAAE;IACF,OAAO;MACHC,KAAK,EAAE,EAAE;MACTC,QAAQ,EAAC;IACb;EACJ,CAAC;EACDC,OAAO,EAAC;IACJ,MAAMC,WAAWA,CAAA,EAAE;MACf,IAAG;QACH,MAAMJ,IAAG,GAAI;UACTC,KAAK,EAAC,IAAI,CAACA,KAAK;UAChBC,QAAQ,EAAC,IAAI,CAACA;QAAS;QACvB,MAAMG,QAAO,GAAI,MAAMN,KAAK,CAACO,IAAI,CAAC,sCAAsC,EAACN,IAAI,CAAC;;QAE9E;QACA,MAAM;UAAEO,KAAK;UAAEC;QAAK,IAAIH,QAAQ,CAACL,IAAI;QACrC,IAAIO,KAAK,EAAE;UACP;UACA;UACAE,YAAY,CAACC,OAAO,CAAC,OAAO,EAAEH,KAAK,CAAC;UACpCE,YAAY,CAACC,OAAO,CAAC,MAAM,EAAEF,IAAI,CAAC;UAClC;UACA,IAAI,CAACG,OAAO,CAACC,IAAI,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC,MAAMC,MAAM,CAACC,QAAQ,CAACC,MAAM,CAAC,CAAC,CAAC;QAC/D;MACJ,CAAC,QAAMC,CAAC,EAAC;QACLC,OAAO,CAACC,GAAG,CAACF,CAAC,CAAC;QACdG,KAAK,CAACH,CAAC,CAACZ,QAAQ,EAAEL,IAAI,EAAEqB,cAAa,IAAK,cAAc,CAAC;MAC7D;IACJ;EACJ;AACJ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}