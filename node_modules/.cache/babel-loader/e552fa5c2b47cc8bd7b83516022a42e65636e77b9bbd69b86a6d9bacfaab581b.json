{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.filter.js\";\nimport \"core-js/modules/es.iterator.for-each.js\";\nimport \"core-js/modules/es.iterator.map.js\";\nimport { getErrorMessage } from '@/utils/commonDataHandler';\nimport axios from 'axios';\nexport default {\n  props: ['isAdmin', 'pageTitle'],\n  data() {\n    return {\n      productList: [],\n      pageSize: 7,\n      currentPage: 0,\n      isLoading: false,\n      isLastPage: false,\n      searchType: \"optional\",\n      searchValue: \"\",\n      searchOptions: [{\n        text: \"선택\",\n        value: \"optional\"\n      }, {\n        text: \"상품명\",\n        value: \"productName\"\n      }, {\n        text: \"카테고리\",\n        value: \"category\"\n      }]\n    };\n  },\n  async created() {\n    this.loadData();\n    window.addEventListener(\"scroll\", this.scrollPaging);\n  },\n  methods: {\n    addCart() {\n      const totalQuantity = 0;\n      const orderProductList = this.productList;\n    },\n    searchProduct() {\n      this.productList = [];\n      this.currentPage = 0;\n      this.isLastPage = false;\n      this.isLoading = false;\n      this.loadData();\n    },\n    scrollPaging() {\n      // 현재화면 높이 + 스크롤로 이동한 거리 > 전체화면높이-n(내가 원하는 길이)\n      const isBottom = window.innerHeight + window.scrollY >= document.body.offsetHeight - 200;\n      if (isBottom & !this.isLoading & !this.isLastPage) {\n        this.loadData();\n      }\n    },\n    async loadData() {\n      this.isLoading = true;\n\n      // 문자열로 직접 ?size=xx&page=yy 형태로도 조립가능하지만, params라는 객체를 사용하면 파라미터형식으로 url조립 (약속된 이름)\n      let params = {\n        size: this.pageSize,\n        page: this.currentPage\n      };\n      if (this.searchType == \"productName\") {\n        params.productName = this.searchValue;\n      }\n      if (this.searchType == \"category\") {\n        params.category = this.searchValue;\n      }\n      const response = await axios.get(`${process.env.VUE_APP_API_BASE_URL}/product/list`, {\n        params\n      });\n      const additionialData = response.data.result.content.map(p => ({\n        ...p,\n        productCount: 0,\n        seleted: false\n      }));\n      if (additionialData.length == 0) {\n        this.isLastPage = true;\n      }\n      this.productList = [...this.productList, ...additionialData];\n      this.currentPage++;\n      this.isLoading = false;\n    },\n    async createdOrder() {\n      let orderList = [];\n      this.productList.forEach(product => {\n        if (product.selected === true) {\n          const productId = product.id;\n          const productCount = product.productCount;\n          const order = {\n            productId,\n            productCount\n          };\n          orderList.push(order);\n        }\n      });\n      try {\n        const orderList = this.productList.filter(p => p.selected == true && p.productCount > 0).map(p => ({\n          productId: p.id,\n          productCount: p.productCount\n        }));\n        if (orderList.length > 0) {\n          const response = await axios.post(`${process.env.VUE_APP_API_BASE_URL}/ordering/create`, orderList);\n          console.log(response);\n          alert(\"주문이 완료되었습니다\");\n          window.location.reload();\n        } else {\n          alert(\"상품을 선택해주세요.\");\n        }\n      } catch (e) {\n        console.log(getErrorMessage(e));\n      }\n    }\n  }\n};","map":{"version":3,"names":["getErrorMessage","axios","props","data","productList","pageSize","currentPage","isLoading","isLastPage","searchType","searchValue","searchOptions","text","value","created","loadData","window","addEventListener","scrollPaging","methods","addCart","totalQuantity","orderProductList","searchProduct","isBottom","innerHeight","scrollY","document","body","offsetHeight","params","size","page","productName","category","response","get","process","env","VUE_APP_API_BASE_URL","additionialData","result","content","map","p","productCount","seleted","length","createdOrder","orderList","forEach","product","selected","productId","id","order","push","filter","post","console","log","alert","location","reload","e"],"sources":["/Users/purewa/Desktop/Pratice/Front_Pratice/vue-project/src/components/ProductListComponent.vue"],"sourcesContent":["<template>\n    <v-container>\n        <v-row class=\"d-flex justify-content-between mt-5\">\n            <v-col>\n                <v-form>\n                    <v-row>\n                        <v-col cols=\"auto\">\n                            <v-select\n                                v-model=\"searchType\"\n                                :items=\"searchOptions\"\n                                item-title=\"text\"\n                                item-value=\"value\"\n                            />\n                        </v-col>\n                        <v-col>\n                            <v-text-field\n                                v-model=\"searchValue\"\n                                label = \"Search\"\n                                @keyup.enter=\"searchProduct\"\n                            />\n                        </v-col>\n                        <v-col cols=\"auto\">\n                            <v-btn @click=\"searchProduct()\">검색</v-btn>\n                        </v-col>\n                    </v-row>\n                </v-form>\n            </v-col>\n            <v-col cols=\"auto\" v-if=\"!isAdmin\">\n                <v-btn @click=\"addCart()\" color=\"primary\">\n                    장바구니\n                </v-btn>\n                <v-btn @click=\"createdOrder()\" color=\"secondary\">\n                    주문하기\n                </v-btn>\n            </v-col>\n            <v-col cols=\"auto\" v-if=\"isAdmin\">\n                <v-btn :to=\"'/product/create'\" color=\"primary\">\n                    상품등록\n                </v-btn>\n            </v-col>\n        </v-row>\n        <v-row>\n            <v-col>\n                <v-card>\n                    <v-card-title class=\"text-center text-h5\">\n                        {{ pageTitle }}\n                    </v-card-title>\n                    <v-card-text>\n                        <v-table>\n                            <thead>\n                                <tr>\n                                    <th>사진</th>\n                                    <th>제품명</th><th>가격</th><th>재고수량</th>\n                                    <th v-if=\"!isAdmin\">주문수량</th>\n                                    <th v-if=\"!isAdmin\">주문선택</th>\n                                    <th v-if=\"isAdmin\">Action</th>\n                                </tr>\n                            </thead>\n                            <tbody>\n                                <tr v-for=\"product in productList\" :key=\"product.id\">\n                                    <td>\n                                        <v-img :src=\"product.imagePath\"></v-img>    \n                                    </td>\n                                    <td>{{ product.name }}</td>\n                                    <td>{{ product.price }}</td>\n                                    <td>{{ product.stockQuantity }}</td>\n                                    <td v-if=\"!isAdmin\">\n                                        <!-- input박스는 화면에서 숫자처럼 보여도, 실제 입력값은 문자열이다. -->\n                                        <v-text-field\n                                            v-model.number=\"product.productCount\"\n                                            type=\"number\"\n                                            style=\"width:65px\"\n\n                                        />\n                                    </td>\n                                    <td v-if=\"!isAdmin\">\n                                        <!-- 객체에 체크된 것들이 key:value (id:true) 방식으로 저장된다. -->\n                                        <input type=\"checkbox\" v-model=\"product.selected\">\n                                    </td>\n                                    <td v-if=\"isAdmin\">\n                                        <v-btn color=\"secondary\">상품삭제</v-btn>\n                                    </td>\n                                </tr>\n                            </tbody>\n                        </v-table>\n                    </v-card-text>\n                </v-card>\n            </v-col>\n        </v-row>\n    </v-container>\n</template>\n\n<script>\nimport { getErrorMessage } from '@/utils/commonDataHandler';\nimport axios from 'axios';\n\n    export default {\n        props: ['isAdmin', 'pageTitle'],\n        data() {\n            return {\n                productList: [],\n                pageSize: 7,\n                currentPage: 0,\n                isLoading: false,\n                isLastPage: false,\n                searchType: \"optional\",\n                searchValue: \"\",\n                searchOptions: [{text: \"선택\", value:\"optional\"}, {text: \"상품명\", value:\"productName\"}, {text: \"카테고리\", value:\"category\"}],\n            }\n        },\n        async created() {\n            this.loadData();\n            window.addEventListener(\"scroll\", this.scrollPaging);\n        },\n        methods: {\n            addCart(){\n                const totalQuantity = 0;\n                const orderProductList = this.productList\n                \n            },\n            searchProduct() {\n                this.productList = [];\n                this.currentPage = 0;\n                this.isLastPage = false;\n                this.isLoading = false;\n\n\n                this.loadData();\n            },\n            scrollPaging() {\n                // 현재화면 높이 + 스크롤로 이동한 거리 > 전체화면높이-n(내가 원하는 길이)\n                const isBottom = window.innerHeight + window.scrollY >= document.body.offsetHeight - 200;\n                if(isBottom & !this.isLoading & !this.isLastPage) {\n                    this.loadData();\n                }\n            },\n            async loadData() {\n                this.isLoading = true;\n\n                // 문자열로 직접 ?size=xx&page=yy 형태로도 조립가능하지만, params라는 객체를 사용하면 파라미터형식으로 url조립 (약속된 이름)\n                let params={\n                    size: this.pageSize,\n                    page: this.currentPage,\n                };\n                if(this.searchType == \"productName\") {\n                    params.productName = this.searchValue;\n                }\n                if(this.searchType == \"category\") {\n                    params.category = this.searchValue;\n                }\n                const response = await axios.get(`${process.env.VUE_APP_API_BASE_URL}/product/list`, {params});\n                const additionialData = response.data.result.content.map(p => ({...p, productCount: 0, seleted: false}));\n                if(additionialData.length == 0) {\n                    this.isLastPage = true;\n                }\n                this.productList = [...this.productList, ...additionialData];\n                this.currentPage++;\n\n                this.isLoading = false;\n            },\n            async createdOrder() {\n                let orderList = [];\n\n                this.productList.forEach(product => {\n                    if(product.selected === true) {\n                        const productId = product.id;\n                        const productCount = product.productCount;\n                        const order = {productId, productCount};\n                        orderList.push(order);\n                    }\n                });\n                \n                try {\n                    const orderList = this.productList\n                        .filter(p => p.selected == true && p.productCount > 0)\n                        .map(p => ({productId:p.id, productCount:p.productCount}));\n\n                    if(orderList.length > 0) {\n                        const response = await axios.post(`${process.env.VUE_APP_API_BASE_URL}/ordering/create`, orderList);\n                        console.log(response);\n                        alert(\"주문이 완료되었습니다\");\n                        window.location.reload();\n                    } else {\n                        alert(\"상품을 선택해주세요.\")\n                    }\n                    \n                } catch (e) {\n                    console.log(getErrorMessage(e));\n                }\n            },\n        }  \n    }\n</script>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}