{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport axios from 'axios';\nimport { getResultData, getErrorMessage } from '@/utils/commonDataHandler';\nimport { jwtDecode } from 'jwt-decode';\nexport default {\n  props: {\n    isMyPage: {\n      type: Boolean,\n      default: false\n    }\n  },\n  data() {\n    return {\n      member: {\n        id: '',\n        name: '',\n        email: '',\n        role: ''\n      }\n    };\n  },\n  async created() {\n    try {\n      const accessToken = localStorage.getItem('accessToken');\n      if (!accessToken) {\n        alert('로그인이 필요합니다.');\n        this.$router.push('/member/login');\n        return;\n      }\n      const payload = jwtDecode(accessToken);\n      if (this.isMyPage && payload.id) {\n        // 마이페이지인 경우: 현재 로그인한 사용자의 ID로 조회\n        await this.getMemberDetail(payload.id);\n      } else {\n        // 관리자 페이지인 경우: URL 파라미터에서 ID 사용\n        await this.getMemberDetail();\n      }\n    } catch (error) {\n      console.error('초기화 오류:', error);\n      alert('사용자 정보를 불러오는 데 실패했습니다.');\n      this.$router.push('/member/login');\n    }\n  },\n  methods: {\n    async getMemberDetail(memberId = this.$route.params.id) {\n      try {\n        const accessToken = localStorage.getItem('accessToken');\n        const response = await axios.get(`${process.env.VUE_APP_API_BASE_URL}/member/detail/${memberId}`, {\n          headers: {\n            Authorization: `Bearer ${accessToken}`\n          }\n        });\n        this.member = getResultData(response);\n      } catch (error) {\n        if (error.response?.status === 401) {\n          alert('관리자 권한이 필요합니다.');\n          this.$router.push('/member/login');\n        } else if (error.response?.status === 403) {\n          alert('접근 권한이 없습니다.');\n          this.$router.push('/member/list');\n        } else {\n          alert(getErrorMessage(error));\n        }\n      }\n    },\n    goBack() {\n      this.$router.push(this.isMyPage ? '/member/mypage' : '/member/list');\n    }\n  }\n};","map":{"version":3,"names":["axios","getResultData","getErrorMessage","jwtDecode","props","isMyPage","type","Boolean","default","data","member","id","name","email","role","created","accessToken","localStorage","getItem","alert","$router","push","payload","getMemberDetail","error","console","methods","memberId","$route","params","response","get","process","env","VUE_APP_API_BASE_URL","headers","Authorization","status","goBack"],"sources":["/Users/purewa/Desktop/Pratice/Front_Pratice/vue-project/src/components/MemberDetailComponent.vue"],"sourcesContent":["```vue\n<template>\n  <v-container>\n    <v-row>\n      <v-col>\n        <v-card>\n          <v-card-title>회원 상세 정보</v-card-title>\n          <v-card-text>\n            <v-row>\n              <v-col cols=\"12\" md=\"6\">\n                <v-text-field\n                  label=\"ID\"\n                  :value=\"member.id\"\n                  readonly\n                />\n              </v-col>\n              <v-col cols=\"12\" md=\"6\">\n                <v-text-field\n                  label=\"이름\"\n                  :value=\"member.name\"\n                  readonly\n                />\n              </v-col>\n              <v-col cols=\"12\" md=\"6\">\n                <v-text-field\n                  label=\"이메일\"\n                  :value=\"member.email\"\n                  readonly\n                />\n              </v-col>\n              <v-col cols=\"12\" md=\"6\">\n                <v-text-field\n                  label=\"권한\"\n                  :value=\"member.role\"\n                  readonly\n                />\n              </v-col>\n            </v-row>\n          </v-card-text>\n          <v-card-actions>\n            <v-btn @click=\"goBack\">목록으로</v-btn>\n          </v-card-actions>\n        </v-card>\n      </v-col>\n    </v-row>\n  </v-container>\n</template>\n\n<script>\nimport axios from 'axios';\nimport { getResultData, getErrorMessage } from '@/utils/commonDataHandler';\nimport { jwtDecode } from 'jwt-decode';\n\nexport default {\n  props: {\n    isMyPage: {\n      type: Boolean,\n      default: false\n    }\n  },\n  data() {\n    return {\n      member: {\n        id: '',\n        name: '',\n        email: '',\n        role: ''\n      }\n    };\n  },\n  async created() {\n    try {\n      const accessToken = localStorage.getItem('accessToken');\n      if (!accessToken) {\n        alert('로그인이 필요합니다.');\n        this.$router.push('/member/login');\n        return;\n      }\n\n      const payload = jwtDecode(accessToken);\n      if (this.isMyPage && payload.id) {\n        // 마이페이지인 경우: 현재 로그인한 사용자의 ID로 조회\n        await this.getMemberDetail(payload.id);\n      } else {\n        // 관리자 페이지인 경우: URL 파라미터에서 ID 사용\n        await this.getMemberDetail();\n      }\n    } catch (error) {\n      console.error('초기화 오류:', error);\n      alert('사용자 정보를 불러오는 데 실패했습니다.');\n      this.$router.push('/member/login');\n    }\n  },\n  methods: {\n    async getMemberDetail(memberId = this.$route.params.id) {\n      try {\n        const accessToken = localStorage.getItem('accessToken');\n        const response = await axios.get(\n          `${process.env.VUE_APP_API_BASE_URL}/member/detail/${memberId}`,\n          {\n            headers: {\n              Authorization: `Bearer ${accessToken}`\n            }\n          }\n        );\n        this.member = getResultData(response);\n      } catch (error) {\n        if (error.response?.status === 401) {\n          alert('관리자 권한이 필요합니다.');\n          this.$router.push('/member/login');\n        } else if (error.response?.status === 403) {\n          alert('접근 권한이 없습니다.');\n          this.$router.push('/member/list');\n        } else {\n          alert(getErrorMessage(error));\n        }\n      }\n    },\n    goBack() {\n      this.$router.push(this.isMyPage ? '/member/mypage' : '/member/list');\n    }\n  }\n};\n</script>\n```"],"mappings":";AAiDA,OAAOA,KAAI,MAAO,OAAO;AACzB,SAASC,aAAa,EAAEC,eAAc,QAAS,2BAA2B;AAC1E,SAASC,SAAQ,QAAS,YAAY;AAEtC,eAAe;EACbC,KAAK,EAAE;IACLC,QAAQ,EAAE;MACRC,IAAI,EAAEC,OAAO;MACbC,OAAO,EAAE;IACX;EACF,CAAC;EACDC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,MAAM,EAAE;QACNC,EAAE,EAAE,EAAE;QACNC,IAAI,EAAE,EAAE;QACRC,KAAK,EAAE,EAAE;QACTC,IAAI,EAAE;MACR;IACF,CAAC;EACH,CAAC;EACD,MAAMC,OAAOA,CAAA,EAAG;IACd,IAAI;MACF,MAAMC,WAAU,GAAIC,YAAY,CAACC,OAAO,CAAC,aAAa,CAAC;MACvD,IAAI,CAACF,WAAW,EAAE;QAChBG,KAAK,CAAC,aAAa,CAAC;QACpB,IAAI,CAACC,OAAO,CAACC,IAAI,CAAC,eAAe,CAAC;QAClC;MACF;MAEA,MAAMC,OAAM,GAAInB,SAAS,CAACa,WAAW,CAAC;MACtC,IAAI,IAAI,CAACX,QAAO,IAAKiB,OAAO,CAACX,EAAE,EAAE;QAC/B;QACA,MAAM,IAAI,CAACY,eAAe,CAACD,OAAO,CAACX,EAAE,CAAC;MACxC,OAAO;QACL;QACA,MAAM,IAAI,CAACY,eAAe,CAAC,CAAC;MAC9B;IACF,EAAE,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,SAAS,EAAEA,KAAK,CAAC;MAC/BL,KAAK,CAAC,wBAAwB,CAAC;MAC/B,IAAI,CAACC,OAAO,CAACC,IAAI,CAAC,eAAe,CAAC;IACpC;EACF,CAAC;EACDK,OAAO,EAAE;IACP,MAAMH,eAAeA,CAACI,QAAO,GAAI,IAAI,CAACC,MAAM,CAACC,MAAM,CAAClB,EAAE,EAAE;MACtD,IAAI;QACF,MAAMK,WAAU,GAAIC,YAAY,CAACC,OAAO,CAAC,aAAa,CAAC;QACvD,MAAMY,QAAO,GAAI,MAAM9B,KAAK,CAAC+B,GAAG,CAC9B,GAAGC,OAAO,CAACC,GAAG,CAACC,oBAAoB,kBAAkBP,QAAQ,EAAE,EAC/D;UACEQ,OAAO,EAAE;YACPC,aAAa,EAAE,UAAUpB,WAAW;UACtC;QACF,CACF,CAAC;QACD,IAAI,CAACN,MAAK,GAAIT,aAAa,CAAC6B,QAAQ,CAAC;MACvC,EAAE,OAAON,KAAK,EAAE;QACd,IAAIA,KAAK,CAACM,QAAQ,EAAEO,MAAK,KAAM,GAAG,EAAE;UAClClB,KAAK,CAAC,gBAAgB,CAAC;UACvB,IAAI,CAACC,OAAO,CAACC,IAAI,CAAC,eAAe,CAAC;QACpC,OAAO,IAAIG,KAAK,CAACM,QAAQ,EAAEO,MAAK,KAAM,GAAG,EAAE;UACzClB,KAAK,CAAC,cAAc,CAAC;UACrB,IAAI,CAACC,OAAO,CAACC,IAAI,CAAC,cAAc,CAAC;QACnC,OAAO;UACLF,KAAK,CAACjB,eAAe,CAACsB,KAAK,CAAC,CAAC;QAC/B;MACF;IACF,CAAC;IACDc,MAAMA,CAAA,EAAG;MACP,IAAI,CAAClB,OAAO,CAACC,IAAI,CAAC,IAAI,CAAChB,QAAO,GAAI,gBAAe,GAAI,cAAc,CAAC;IACtE;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}